{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/AldoPemasi/Coding/blob/main/Analisis%20Sentimen%20Terhadaap%20Review%20Aplikasi%20Hotel%20Online%20Menggunakan%20Metode%20K-Nearst%20Neighbor\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "MpeEpecIyWlm"
      },
      "source": [
        "Web Scraper"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5tvOSEXQVjRg",
        "outputId": "4fe01d6a-e2a3-4220-90a8-e9c2fe646249"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Collecting google-play-scraper\n",
            "  Downloading google_play_scraper-1.2.6-py3-none-any.whl (28 kB)\n",
            "Installing collected packages: google-play-scraper\n",
            "Successfully installed google-play-scraper-1.2.6\n"
          ]
        }
      ],
      "source": [
        "!pip install google-play-scraper"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "-Djb7GNiWJFS"
      },
      "outputs": [],
      "source": [
        "from google_play_scraper import app\n",
        "\n",
        "import pandas as pd\n",
        "\n",
        "import numpy as np\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Vfh1zvpZXMwC"
      },
      "outputs": [],
      "source": [
        "from google_play_scraper import Sort, reviews\n",
        "\n",
        "result, continuation_token = reviews(\n",
        "    'com.traveloka.android',\n",
        "    lang='id',\n",
        "    country='id',\n",
        "    sort=Sort.MOST_RELEVANT,\n",
        "    count=398,\n",
        "    filter_score_with=None\n",
        ")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 466
        },
        "collapsed": true,
        "id": "guKmNsT_a73d",
        "outputId": "3db006ab-72b9-4f8f-f164-dbc7c68ae11d"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "summary": "{\n  \"name\": \"data\",\n  \"rows\": 398,\n  \"fields\": [\n    {\n      \"column\": \"reviewId\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 398,\n        \"samples\": [\n          \"e2931447-28d7-44de-ba9f-c96bfad3f0d9\",\n          \"99131c8a-dea8-456e-927e-7be9fef6551c\",\n          \"fb835aef-1d91-49e4-9761-80cac2de31e7\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"userName\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 398,\n        \"samples\": [\n          \"\\u0627\\u0644\\u0644\\u0641\\u0629 \\u062f\\u0648 \\u0627\\u0644\\u0634\\u0646\\u062a\\u0627 D'Syaban\",\n          \"zhafran alfatih\",\n          \"Deandra Kamania Nesya\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"userImage\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 398,\n        \"samples\": [\n          \"https://play-lh.googleusercontent.com/a-/ALV-UjWJY5ksxH739RJoe39Np8NtOUhcGvZhPHHSgXU8gnK3s5f7o4wZ\",\n          \"https://play-lh.googleusercontent.com/a-/ALV-UjU6vbqnFgJhr3g8kSW1ZC-mJSBaEVEKAWl8ZgAY45nbUpIxB3c\",\n          \"https://play-lh.googleusercontent.com/a-/ALV-UjWgHr7vruBkAFCmyHAKaAmpreDzLvkGZRHG6C87g4hqhDDLPqjGww\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"content\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 398,\n        \"samples\": [\n          \"aplikasi smart, sangat memudahkan ktika ingin melakukan perjalanan jauh... lov it\",\n          \"Gak bisa liat pencairan hotel di kota lain. Bisanya di kota sendiri. Suruh versi baru. La ini aja baru di download lagi. Aneh\",\n          \"Pembatalan booking hotel (refundable) dgn pembayaran paylater tetap di kenakan bunga... It's not fair bagi konsumen. Hotel sdh di batalkan, tapi aneh masih kena bunga!!! Proses eskalasi pelaporan terlalu lama 7-14 hari!! Dana saya mesti bayarkan dulu tagihan paylater yg sudah sy batalkan. ##CASE CLOSED, sdh ditangani dengan baik, dana sdh dikembalikan. Thanks Traveloka Team \\ud83d\\udc4d\\ud83d\\udc4d\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5,\n          4,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"thumbsUpCount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 99,\n        \"min\": 0,\n        \"max\": 1371,\n        \"num_unique_values\": 90,\n        \"samples\": [\n          10,\n          36,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reviewCreatedVersion\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"3.94.1\",\n          \"3.93.0\",\n          \"3.98.1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"at\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-12-14 07:34:43\",\n        \"max\": \"2024-05-28 12:35:22\",\n        \"num_unique_values\": 398,\n        \"samples\": [\n          \"2024-03-20 12:13:36\",\n          \"2023-12-23 01:06:28\",\n          \"2024-03-14 13:14:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"replyContent\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 292,\n        \"samples\": [\n          \"Hai Tiara, mohon maaf atas ketidaknyamanannya. Update tersebut bertujuan untuk memperbarui kendala yang ada, sehingga kamu bisa mendapat pengalaman terbaik saat bertransaksi. Jika kamu terkendala dalam menggunakan aplikasi Traveloka, kamu bisa hubungi kami melalui email cs@traveloka.com dengan melampirkan screenshoot kendalanya. Terima kasih. -DF\",\n          \"Hai Yulis, mohon maaf atas kendala pemesanan Anda. Mengenai pemilihan kursi mengikuti kebijakan masing-masing maskapai. Kami tidak dapat menemukan kasus yang sesuai dengan deskripsi Anda di sistem kami. Untuk membantu Anda dalam menyelesaikan masalah ini, silakan hubungi kami melalui pesan di aplikasi atau email cs@traveloka.com Terima kasih. -HM\",\n          \"Hai Ragil. Mohon maaf atas kendala yang Anda alami. Pada dasarnya update aplikasi dilakukan untuk memberikan akses ke fitur terbaru, sekaligus meningkatkan keamanan dan stabilitas aplikasi. Jika Anda memiliki kendala setelah dilakukan update, sampaikan kendala Anda melalui cs@traveloka.com. Terima kasih atas saran yang Anda berikan. -RN\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"repliedAt\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2017-09-11 10:34:28\",\n        \"max\": \"2024-05-28 13:10:49\",\n        \"num_unique_values\": 388,\n        \"samples\": [\n          \"2024-01-15 08:19:48\",\n          \"2024-03-25 07:52:36\",\n          \"2024-03-14 23:40:12\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"appVersion\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"3.94.1\",\n          \"3.93.0\",\n          \"3.98.1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}",
              "type": "dataframe",
              "variable_name": "data"
            },
            "text/html": [
              "\n",
              "  <div id=\"df-94d4f195-6c62-447e-941a-5b82a2276b19\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>reviewId</th>\n",
              "      <th>userName</th>\n",
              "      <th>userImage</th>\n",
              "      <th>content</th>\n",
              "      <th>score</th>\n",
              "      <th>thumbsUpCount</th>\n",
              "      <th>reviewCreatedVersion</th>\n",
              "      <th>at</th>\n",
              "      <th>replyContent</th>\n",
              "      <th>repliedAt</th>\n",
              "      <th>appVersion</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>49478815-0a0b-4ce4-a409-5fa422852d00</td>\n",
              "      <td>Humam Alhaq</td>\n",
              "      <td>https://play-lh.googleusercontent.com/a/ACg8oc...</td>\n",
              "      <td>Dari dlu senang pakai traveloka, cuma kok seka...</td>\n",
              "      <td>1</td>\n",
              "      <td>251</td>\n",
              "      <td>3.98.1</td>\n",
              "      <td>2024-04-17 22:27:30</td>\n",
              "      <td>None</td>\n",
              "      <td>NaT</td>\n",
              "      <td>3.98.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8bd922c4-b1ee-48d9-92ba-b936e8b5824d</td>\n",
              "      <td>Sinar Terang</td>\n",
              "      <td>https://play-lh.googleusercontent.com/a-/ALV-U...</td>\n",
              "      <td>sejak dulu saya sudah pakai traveloka untuk pe...</td>\n",
              "      <td>1</td>\n",
              "      <td>34</td>\n",
              "      <td>3.100.1</td>\n",
              "      <td>2024-05-13 15:27:40</td>\n",
              "      <td>Halo Kak, terima kasih banyak atas ratingnya, ...</td>\n",
              "      <td>2023-02-21 05:00:10</td>\n",
              "      <td>3.100.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>6a7c0655-dc24-4213-b95c-4d509d5367e6</td>\n",
              "      <td>Erlyn Tarigan</td>\n",
              "      <td>https://play-lh.googleusercontent.com/a/ACg8oc...</td>\n",
              "      <td>Aplikasi ga terjamin. Gw pesen hotel. Eh tenya...</td>\n",
              "      <td>1</td>\n",
              "      <td>22</td>\n",
              "      <td>3.100.1</td>\n",
              "      <td>2024-05-11 14:10:22</td>\n",
              "      <td>Hai, Erlyn. Kami mohon maaf terkait kendala ya...</td>\n",
              "      <td>2024-05-11 14:30:59</td>\n",
              "      <td>3.100.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>c998bc8c-fb3c-490c-a053-cf38f5a92127</td>\n",
              "      <td>Uta Labuh</td>\n",
              "      <td>https://play-lh.googleusercontent.com/a-/ALV-U...</td>\n",
              "      <td>Jangan Pakai Aplikasi Ini, Refund Tiket Lama B...</td>\n",
              "      <td>1</td>\n",
              "      <td>15</td>\n",
              "      <td>3.100.1</td>\n",
              "      <td>2024-05-19 05:02:54</td>\n",
              "      <td>Hai Uta. Mohon maaf atas kendala Anda. Saat in...</td>\n",
              "      <td>2024-05-19 05:57:41</td>\n",
              "      <td>3.100.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1b64a5cc-f28b-4e01-8944-7a7c5112fb8b</td>\n",
              "      <td>Satria Kurnia Areka</td>\n",
              "      <td>https://play-lh.googleusercontent.com/a-/ALV-U...</td>\n",
              "      <td>aplikasi yang kalo ada delay ga ada pemberitah...</td>\n",
              "      <td>1</td>\n",
              "      <td>19</td>\n",
              "      <td>3.101.0</td>\n",
              "      <td>2024-05-24 23:32:47</td>\n",
              "      <td>Hai Satria, mohon maaf atas perubahan jadwal d...</td>\n",
              "      <td>2024-05-25 00:24:35</td>\n",
              "      <td>3.101.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-94d4f195-6c62-447e-941a-5b82a2276b19')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-94d4f195-6c62-447e-941a-5b82a2276b19 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-94d4f195-6c62-447e-941a-5b82a2276b19');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d24c8363-ae9c-418e-b38d-9df5a92ee28d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d24c8363-ae9c-418e-b38d-9df5a92ee28d')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d24c8363-ae9c-418e-b38d-9df5a92ee28d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "                               reviewId             userName  \\\n",
              "0  49478815-0a0b-4ce4-a409-5fa422852d00          Humam Alhaq   \n",
              "1  8bd922c4-b1ee-48d9-92ba-b936e8b5824d         Sinar Terang   \n",
              "2  6a7c0655-dc24-4213-b95c-4d509d5367e6        Erlyn Tarigan   \n",
              "3  c998bc8c-fb3c-490c-a053-cf38f5a92127            Uta Labuh   \n",
              "4  1b64a5cc-f28b-4e01-8944-7a7c5112fb8b  Satria Kurnia Areka   \n",
              "\n",
              "                                           userImage  \\\n",
              "0  https://play-lh.googleusercontent.com/a/ACg8oc...   \n",
              "1  https://play-lh.googleusercontent.com/a-/ALV-U...   \n",
              "2  https://play-lh.googleusercontent.com/a/ACg8oc...   \n",
              "3  https://play-lh.googleusercontent.com/a-/ALV-U...   \n",
              "4  https://play-lh.googleusercontent.com/a-/ALV-U...   \n",
              "\n",
              "                                             content  score  thumbsUpCount  \\\n",
              "0  Dari dlu senang pakai traveloka, cuma kok seka...      1            251   \n",
              "1  sejak dulu saya sudah pakai traveloka untuk pe...      1             34   \n",
              "2  Aplikasi ga terjamin. Gw pesen hotel. Eh tenya...      1             22   \n",
              "3  Jangan Pakai Aplikasi Ini, Refund Tiket Lama B...      1             15   \n",
              "4  aplikasi yang kalo ada delay ga ada pemberitah...      1             19   \n",
              "\n",
              "  reviewCreatedVersion                  at  \\\n",
              "0               3.98.1 2024-04-17 22:27:30   \n",
              "1              3.100.1 2024-05-13 15:27:40   \n",
              "2              3.100.1 2024-05-11 14:10:22   \n",
              "3              3.100.1 2024-05-19 05:02:54   \n",
              "4              3.101.0 2024-05-24 23:32:47   \n",
              "\n",
              "                                        replyContent           repliedAt  \\\n",
              "0                                               None                 NaT   \n",
              "1  Halo Kak, terima kasih banyak atas ratingnya, ... 2023-02-21 05:00:10   \n",
              "2  Hai, Erlyn. Kami mohon maaf terkait kendala ya... 2024-05-11 14:30:59   \n",
              "3  Hai Uta. Mohon maaf atas kendala Anda. Saat in... 2024-05-19 05:57:41   \n",
              "4  Hai Satria, mohon maaf atas perubahan jadwal d... 2024-05-25 00:24:35   \n",
              "\n",
              "  appVersion  \n",
              "0     3.98.1  \n",
              "1    3.100.1  \n",
              "2    3.100.1  \n",
              "3    3.100.1  \n",
              "4    3.101.0  "
            ]
          },
          "execution_count": 7,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "data = pd.DataFrame(np.array(result),columns=['review'])\n",
        "\n",
        "data = data.join(pd.DataFrame(data.pop('review').tolist()))\n",
        "\n",
        "data.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qbxCfXTobPvU",
        "outputId": "8c6eaf68-41f8-4eb8-a07e-bad8c438a581"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "398"
            ]
          },
          "execution_count": 8,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "len(data.index)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "collapsed": true,
        "id": "HtWTtTKKbRMz",
        "outputId": "2a9cc05d-5ab4-44f6-d201-feacba682868"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "summary": "{\n  \"name\": \"data[['userName', 'score', 'at', 'content']]\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"userName\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Humam Alhaq\",\n          \"Uta Labuh\",\n          \"Sinar Terang\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"at\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-04-17 22:27:30\",\n        \"max\": \"2024-05-24 23:32:47\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2024-04-17 22:27:30\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"content\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Dari dlu senang pakai traveloka, cuma kok sekarang mau \\\"ganti-ganti tgl penerbangan pesawat\\\" Kok gabisa ya, selalu ada tulisan \\\"ada kesalahan dalam sistem kami\\\", udah coba restart HP, apus dan unduh aplikasi traveloka berkali2 sama aja hasilnya ga berubah, ttp gabisa klik ganti tgl pesawat, menyusahkan sekali, mohon di perbaiki, terimakasih\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}",
              "type": "dataframe"
            },
            "text/html": [
              "\n",
              "  <div id=\"df-4972a59f-df70-4dce-8493-8ef6bc9a657a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>userName</th>\n",
              "      <th>score</th>\n",
              "      <th>at</th>\n",
              "      <th>content</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Satria Kurnia Areka</td>\n",
              "      <td>1</td>\n",
              "      <td>2024-05-24 23:32:47</td>\n",
              "      <td>aplikasi yang kalo ada delay ga ada pemberitah...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Humam Alhaq</td>\n",
              "      <td>1</td>\n",
              "      <td>2024-04-17 22:27:30</td>\n",
              "      <td>Dari dlu senang pakai traveloka, cuma kok seka...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Sinar Terang</td>\n",
              "      <td>1</td>\n",
              "      <td>2024-05-13 15:27:40</td>\n",
              "      <td>sejak dulu saya sudah pakai traveloka untuk pe...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Erlyn Tarigan</td>\n",
              "      <td>1</td>\n",
              "      <td>2024-05-11 14:10:22</td>\n",
              "      <td>Aplikasi ga terjamin. Gw pesen hotel. Eh tenya...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Uta Labuh</td>\n",
              "      <td>1</td>\n",
              "      <td>2024-05-19 05:02:54</td>\n",
              "      <td>Jangan Pakai Aplikasi Ini, Refund Tiket Lama B...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4972a59f-df70-4dce-8493-8ef6bc9a657a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-4972a59f-df70-4dce-8493-8ef6bc9a657a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-4972a59f-df70-4dce-8493-8ef6bc9a657a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7653d522-5381-4db2-8ee3-c0202be3452b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7653d522-5381-4db2-8ee3-c0202be3452b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7653d522-5381-4db2-8ee3-c0202be3452b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "              userName  score                  at  \\\n",
              "0  Satria Kurnia Areka      1 2024-05-24 23:32:47   \n",
              "1          Humam Alhaq      1 2024-04-17 22:27:30   \n",
              "2         Sinar Terang      1 2024-05-13 15:27:40   \n",
              "3        Erlyn Tarigan      1 2024-05-11 14:10:22   \n",
              "4            Uta Labuh      1 2024-05-19 05:02:54   \n",
              "\n",
              "                                             content  \n",
              "0  aplikasi yang kalo ada delay ga ada pemberitah...  \n",
              "1  Dari dlu senang pakai traveloka, cuma kok seka...  \n",
              "2  sejak dulu saya sudah pakai traveloka untuk pe...  \n",
              "3  Aplikasi ga terjamin. Gw pesen hotel. Eh tenya...  \n",
              "4  Jangan Pakai Aplikasi Ini, Refund Tiket Lama B...  "
            ]
          },
          "execution_count": 11,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "data[['userName', 'score', 'at', 'content']].head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true,
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "collapsed": true,
        "id": "iJoGnZgabxcq",
        "outputId": "0c63adf4-5541-4218-9f70-03de3c6e35db"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "summary": "{\n  \"name\": \"sorted_df\",\n  \"rows\": 398,\n  \"fields\": [\n    {\n      \"column\": \"userName\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 398,\n        \"samples\": [\n          \"Deasy Suebtian\",\n          \"Fatma Feliana\",\n          \"Sidik Darmawan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          2,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"at\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-12-14 07:34:43\",\n        \"max\": \"2024-05-28 12:35:22\",\n        \"num_unique_values\": 398,\n        \"samples\": [\n          \"2024-04-02 04:54:48\",\n          \"2024-05-27 02:06:38\",\n          \"2023-12-26 12:14:34\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"content\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 398,\n        \"samples\": [\n          \"Betul2 bikin emosi Traveloka ni..SDH limit paylater di hilangkan level menurun pdhl TDK pernah telat bayar...skrg beli tiket dan pesan hotel bayar cash pn point' jg gak keluar...bagus Pindah ke toko pedia sm Shopie sama2 PNY paylater dan point' x langsung masuk klu beli cash maunya pake paylater...la ini SDH sering di gunakan malah level menurun...gaaaaak jeeelaaaasss\",\n          \"Tiket pesawat Lampung-Jakarta dibatalkan H-12jam dr keberangkatan. Dikasih tau lewat email. Alasannya nggak jelas. Ngurus Refund tiket berkali\\u00b2 lewat telfon bertele\\u00b2.. disuruh nunggu maks 75hr. Lamaaaa bgt untuk sekelas traveloka\",\n          \"Dinsaat peak season saat ini tiba tiba hotel yang saya book di Traveloka bilang sudah oenuh. Dan ini kejadian kedua, saat saya liburan peak season di Kuala Lumpur thn 2018. Tidak ada tanggung jawab atas kerugian kami terluntanh lantung di malam hari sekeluarha mencari hotel pengganti\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}",
              "type": "dataframe",
              "variable_name": "sorted_df"
            },
            "text/html": [
              "\n",
              "  <div id=\"df-e06a5121-0317-4fa4-8a35-3ffe0801ae4f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>userName</th>\n",
              "      <th>score</th>\n",
              "      <th>at</th>\n",
              "      <th>content</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>244</th>\n",
              "      <td>Nabila Firdausi</td>\n",
              "      <td>5</td>\n",
              "      <td>2023-12-14 07:34:43</td>\n",
              "      <td>Biasa beli tiket pesawat, hotel, tmpat rekreas...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>231</th>\n",
              "      <td>Sheilla Andani</td>\n",
              "      <td>1</td>\n",
              "      <td>2023-12-15 00:18:48</td>\n",
              "      <td>Saya kecewa, awal2 nya nyaman karena ada payla...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>Indri Lestari</td>\n",
              "      <td>5</td>\n",
              "      <td>2023-12-15 06:51:33</td>\n",
              "      <td>Adanya aplikasi Traveloka membantu aku yang su...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>270</th>\n",
              "      <td>Amalia Kurnia Dewi</td>\n",
              "      <td>5</td>\n",
              "      <td>2023-12-16 03:47:44</td>\n",
              "      <td>Terima kasih banyak traveloka sudah menemani p...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>357</th>\n",
              "      <td>Haikal Vold</td>\n",
              "      <td>5</td>\n",
              "      <td>2023-12-16 04:01:41</td>\n",
              "      <td>untuk UI aplikasinya udah mantap,dan fitur fit...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e06a5121-0317-4fa4-8a35-3ffe0801ae4f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e06a5121-0317-4fa4-8a35-3ffe0801ae4f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e06a5121-0317-4fa4-8a35-3ffe0801ae4f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0c9c9dea-9b9b-4ed8-8271-b0daea600e5a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0c9c9dea-9b9b-4ed8-8271-b0daea600e5a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0c9c9dea-9b9b-4ed8-8271-b0daea600e5a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "               userName  score                  at  \\\n",
              "244     Nabila Firdausi      5 2023-12-14 07:34:43   \n",
              "231      Sheilla Andani      1 2023-12-15 00:18:48   \n",
              "366       Indri Lestari      5 2023-12-15 06:51:33   \n",
              "270  Amalia Kurnia Dewi      5 2023-12-16 03:47:44   \n",
              "357         Haikal Vold      5 2023-12-16 04:01:41   \n",
              "\n",
              "                                               content  \n",
              "244  Biasa beli tiket pesawat, hotel, tmpat rekreas...  \n",
              "231  Saya kecewa, awal2 nya nyaman karena ada payla...  \n",
              "366  Adanya aplikasi Traveloka membantu aku yang su...  \n",
              "270  Terima kasih banyak traveloka sudah menemani p...  \n",
              "357  untuk UI aplikasinya udah mantap,dan fitur fit...  "
            ]
          },
          "execution_count": 10,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "data = data[['userName', 'score', 'at', 'content']]\n",
        "sorted_df = data.sort_values(by='at', ascending=True)\n",
        "sorted_df.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "collapsed": true,
        "id": "7TeA2NxipChS",
        "outputId": "341f6b60-9a83-4c0d-819e-0ca21b99848a"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "summary": "{\n  \"name\": \"data\",\n  \"rows\": 398,\n  \"fields\": [\n    {\n      \"column\": \"userName\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 398,\n        \"samples\": [\n          \"Topik Alifan\",\n          \"keceng\",\n          \"Deandra Kamania Nesya\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5,\n          4,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tanggal\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-12-14 07:34:43\",\n        \"max\": \"2024-05-27 02:06:38\",\n        \"num_unique_values\": 398,\n        \"samples\": [\n          \"2024-03-28 03:56:56\",\n          \"2024-03-03 10:39:47\",\n          \"2024-03-14 13:14:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ulasan\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 398,\n        \"samples\": [\n          \"Tolong di bantu dong, syaa pesan 4 tiket. Tapi yang 3 pake nama saya semua. Sya sudah ajuin refund d tolak\",\n          \"coba ditambahin pembayaran pakai QRIS mungkin lebih mudah...terkadang pembayaran lewat e-wallet sering error..kalau pakai QRIS bisa lebih cepat\",\n          \"Pembatalan booking hotel (refundable) dgn pembayaran paylater tetap di kenakan bunga... It's not fair bagi konsumen. Hotel sdh di batalkan, tapi aneh masih kena bunga!!! Proses eskalasi pelaporan terlalu lama 7-14 hari!! Dana saya mesti bayarkan dulu tagihan paylater yg sudah sy batalkan. ##CASE CLOSED, sdh ditangani dengan baik, dana sdh dikembalikan. Thanks Traveloka Team \\ud83d\\udc4d\\ud83d\\udc4d\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}",
              "type": "dataframe",
              "variable_name": "data"
            },
            "text/html": [
              "\n",
              "  <div id=\"df-56b78524-75da-48fe-8eea-ebeb535998cf\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>userName</th>\n",
              "      <th>rating</th>\n",
              "      <th>tanggal</th>\n",
              "      <th>ulasan</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Satria Kurnia Areka</td>\n",
              "      <td>1</td>\n",
              "      <td>2024-05-24 23:32:47</td>\n",
              "      <td>aplikasi yang kalo ada delay ga ada pemberitah...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Humam Alhaq</td>\n",
              "      <td>1</td>\n",
              "      <td>2024-04-17 22:27:30</td>\n",
              "      <td>Dari dlu senang pakai traveloka, cuma kok seka...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Sinar Terang</td>\n",
              "      <td>1</td>\n",
              "      <td>2024-05-13 15:27:40</td>\n",
              "      <td>sejak dulu saya sudah pakai traveloka untuk pe...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Erlyn Tarigan</td>\n",
              "      <td>1</td>\n",
              "      <td>2024-05-11 14:10:22</td>\n",
              "      <td>Aplikasi ga terjamin. Gw pesen hotel. Eh tenya...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Uta Labuh</td>\n",
              "      <td>1</td>\n",
              "      <td>2024-05-19 05:02:54</td>\n",
              "      <td>Jangan Pakai Aplikasi Ini, Refund Tiket Lama B...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-56b78524-75da-48fe-8eea-ebeb535998cf')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-56b78524-75da-48fe-8eea-ebeb535998cf button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-56b78524-75da-48fe-8eea-ebeb535998cf');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-53dfa3fe-2eef-474e-8935-9ec3a97b13ec\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-53dfa3fe-2eef-474e-8935-9ec3a97b13ec')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-53dfa3fe-2eef-474e-8935-9ec3a97b13ec button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "              userName  rating             tanggal  \\\n",
              "0  Satria Kurnia Areka       1 2024-05-24 23:32:47   \n",
              "1          Humam Alhaq       1 2024-04-17 22:27:30   \n",
              "2         Sinar Terang       1 2024-05-13 15:27:40   \n",
              "3        Erlyn Tarigan       1 2024-05-11 14:10:22   \n",
              "4            Uta Labuh       1 2024-05-19 05:02:54   \n",
              "\n",
              "                                              ulasan  \n",
              "0  aplikasi yang kalo ada delay ga ada pemberitah...  \n",
              "1  Dari dlu senang pakai traveloka, cuma kok seka...  \n",
              "2  sejak dulu saya sudah pakai traveloka untuk pe...  \n",
              "3  Aplikasi ga terjamin. Gw pesen hotel. Eh tenya...  \n",
              "4  Jangan Pakai Aplikasi Ini, Refund Tiket Lama B...  "
            ]
          },
          "execution_count": 13,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "data = data.rename(columns={'content': 'ulasan', 'score': 'rating', 'at': 'tanggal'})\n",
        "data.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "nqfllKkrcCbK"
      },
      "outputs": [],
      "source": [
        "data = sorted_df[['userName', 'score','at', 'content']]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "co31JWxTcVDx"
      },
      "outputs": [],
      "source": [
        "data.to_csv(\"Traveloka.com.csv\", index = False)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zXemurKwyRaC"
      },
      "source": [
        "Text PreProcessing"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "cRDuzvzfyUbA",
        "outputId": "519a3b4b-cb1f-4c69-e01e-2ca6ecf37dfc"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Requirement already satisfied: nltk in /usr/local/lib/python3.10/dist-packages (3.8.1)\n",
            "Requirement already satisfied: click in /usr/local/lib/python3.10/dist-packages (from nltk) (8.1.7)\n",
            "Requirement already satisfied: joblib in /usr/local/lib/python3.10/dist-packages (from nltk) (1.4.2)\n",
            "Requirement already satisfied: regex>=2021.8.3 in /usr/local/lib/python3.10/dist-packages (from nltk) (2024.5.15)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from nltk) (4.66.4)\n",
            "Collecting sastrawi\n",
            "  Downloading Sastrawi-1.0.1-py2.py3-none-any.whl (209 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m209.7/209.7 kB\u001b[0m \u001b[31m4.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hInstalling collected packages: sastrawi\n",
            "Successfully installed sastrawi-1.0.1\n",
            "Collecting swifter\n",
            "  Downloading swifter-1.4.0.tar.gz (1.2 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.2/1.2 MB\u001b[0m \u001b[31m12.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: pandas>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from swifter) (2.0.3)\n",
            "Requirement already satisfied: psutil>=5.6.6 in /usr/local/lib/python3.10/dist-packages (from swifter) (5.9.5)\n",
            "Requirement already satisfied: dask[dataframe]>=2.10.0 in /usr/local/lib/python3.10/dist-packages (from swifter) (2023.8.1)\n",
            "Requirement already satisfied: tqdm>=4.33.0 in /usr/local/lib/python3.10/dist-packages (from swifter) (4.66.4)\n",
            "Requirement already satisfied: click>=8.0 in /usr/local/lib/python3.10/dist-packages (from dask[dataframe]>=2.10.0->swifter) (8.1.7)\n",
            "Requirement already satisfied: cloudpickle>=1.5.0 in /usr/local/lib/python3.10/dist-packages (from dask[dataframe]>=2.10.0->swifter) (2.2.1)\n",
            "Requirement already satisfied: fsspec>=2021.09.0 in /usr/local/lib/python3.10/dist-packages (from dask[dataframe]>=2.10.0->swifter) (2023.6.0)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from dask[dataframe]>=2.10.0->swifter) (24.0)\n",
            "Requirement already satisfied: partd>=1.2.0 in /usr/local/lib/python3.10/dist-packages (from dask[dataframe]>=2.10.0->swifter) (1.4.2)\n",
            "Requirement already satisfied: pyyaml>=5.3.1 in /usr/local/lib/python3.10/dist-packages (from dask[dataframe]>=2.10.0->swifter) (6.0.1)\n",
            "Requirement already satisfied: toolz>=0.10.0 in /usr/local/lib/python3.10/dist-packages (from dask[dataframe]>=2.10.0->swifter) (0.12.1)\n",
            "Requirement already satisfied: importlib-metadata>=4.13.0 in /usr/local/lib/python3.10/dist-packages (from dask[dataframe]>=2.10.0->swifter) (7.1.0)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.0.0->swifter) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.0.0->swifter) (2023.4)\n",
            "Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.0.0->swifter) (2024.1)\n",
            "Requirement already satisfied: numpy>=1.21.0 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.0.0->swifter) (1.25.2)\n",
            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.10/dist-packages (from importlib-metadata>=4.13.0->dask[dataframe]>=2.10.0->swifter) (3.18.2)\n",
            "Requirement already satisfied: locket in /usr/local/lib/python3.10/dist-packages (from partd>=1.2.0->dask[dataframe]>=2.10.0->swifter) (1.0.0)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas>=1.0.0->swifter) (1.16.0)\n",
            "Building wheels for collected packages: swifter\n",
            "  Building wheel for swifter (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for swifter: filename=swifter-1.4.0-py3-none-any.whl size=16507 sha256=6d147745df2783ff26264be9acb5481f811f968f89bb06234d1249459a06c16b\n",
            "  Stored in directory: /root/.cache/pip/wheels/e4/cf/51/0904952972ee2c7aa3709437065278dc534ec1b8d2ad41b443\n",
            "Successfully built swifter\n",
            "Installing collected packages: swifter\n",
            "Successfully installed swifter-1.4.0\n",
            "Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (3.3)\n"
          ]
        }
      ],
      "source": [
        "!pip install nltk\n",
        "!pip install sastrawi\n",
        "!pip install swifter\n",
        "!pip install networkx"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "JFhYNNYkydyo",
        "outputId": "21370a7e-1f23-466b-89be-e6eb89641d6c"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[nltk_data] Downloading package punkt to /root/nltk_data...\n",
            "[nltk_data]   Unzipping tokenizers/punkt.zip.\n"
          ]
        }
      ],
      "source": [
        "import nltk\n",
        "nltk.download('punkt');"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "7-VymXhVykTL",
        "outputId": "092b146a-62d3-41f2-87c1-d203c81c8bb3"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[nltk_data] Downloading package stopwords to /root/nltk_data...\n",
            "[nltk_data]   Unzipping corpora/stopwords.zip.\n",
            "[nltk_data] Downloading package punkt to /root/nltk_data...\n",
            "[nltk_data]   Package punkt is already up-to-date!\n",
            "[nltk_data] Error loading averaged_perception_taged: Package\n",
            "[nltk_data]     'averaged_perception_taged' not found in index\n",
            "[nltk_data] Downloading package wordnet to /root/nltk_data...\n"
          ]
        },
        {
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "execution_count": 18,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n",
        "import re, string\n",
        "import nltk\n",
        "from nltk.tokenize import word_tokenize\n",
        "from nltk.corpus import stopwords\n",
        "from nltk.stem import SnowballStemmer\n",
        "from nltk.corpus import wordnet\n",
        "from nltk.stem import WordNetLemmatizer\n",
        "nltk.download('stopwords')\n",
        "nltk.download('punkt')\n",
        "nltk.download('averaged_perception_taged')\n",
        "nltk.download('wordnet')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true,
          "base_uri": "https://localhost:8080/",
          "height": 72
        },
        "collapsed": true,
        "id": "jd8zPLVNyuZN",
        "outputId": "773a2ee1-17e3-40e4-a7a9-32f559f66524"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-88955ec6-483b-4ec7-882f-d0d013ff7cd6\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-88955ec6-483b-4ec7-882f-d0d013ff7cd6\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script>// Copyright 2017 Google LLC\n",
              "//\n",
              "// Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "// you may not use this file except in compliance with the License.\n",
              "// You may obtain a copy of the License at\n",
              "//\n",
              "//      http://www.apache.org/licenses/LICENSE-2.0\n",
              "//\n",
              "// Unless required by applicable law or agreed to in writing, software\n",
              "// distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "// See the License for the specific language governing permissions and\n",
              "// limitations under the License.\n",
              "\n",
              "/**\n",
              " * @fileoverview Helpers for google.colab Python module.\n",
              " */\n",
              "(function(scope) {\n",
              "function span(text, styleAttributes = {}) {\n",
              "  const element = document.createElement('span');\n",
              "  element.textContent = text;\n",
              "  for (const key of Object.keys(styleAttributes)) {\n",
              "    element.style[key] = styleAttributes[key];\n",
              "  }\n",
              "  return element;\n",
              "}\n",
              "\n",
              "// Max number of bytes which will be uploaded at a time.\n",
              "const MAX_PAYLOAD_SIZE = 100 * 1024;\n",
              "\n",
              "function _uploadFiles(inputId, outputId) {\n",
              "  const steps = uploadFilesStep(inputId, outputId);\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  // Cache steps on the outputElement to make it available for the next call\n",
              "  // to uploadFilesContinue from Python.\n",
              "  outputElement.steps = steps;\n",
              "\n",
              "  return _uploadFilesContinue(outputId);\n",
              "}\n",
              "\n",
              "// This is roughly an async generator (not supported in the browser yet),\n",
              "// where there are multiple asynchronous steps and the Python side is going\n",
              "// to poll for completion of each step.\n",
              "// This uses a Promise to block the python side on completion of each step,\n",
              "// then passes the result of the previous step as the input to the next step.\n",
              "function _uploadFilesContinue(outputId) {\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  const steps = outputElement.steps;\n",
              "\n",
              "  const next = steps.next(outputElement.lastPromiseValue);\n",
              "  return Promise.resolve(next.value.promise).then((value) => {\n",
              "    // Cache the last promise value to make it available to the next\n",
              "    // step of the generator.\n",
              "    outputElement.lastPromiseValue = value;\n",
              "    return next.value.response;\n",
              "  });\n",
              "}\n",
              "\n",
              "/**\n",
              " * Generator function which is called between each async step of the upload\n",
              " * process.\n",
              " * @param {string} inputId Element ID of the input file picker element.\n",
              " * @param {string} outputId Element ID of the output display.\n",
              " * @return {!Iterable<!Object>} Iterable of next steps.\n",
              " */\n",
              "function* uploadFilesStep(inputId, outputId) {\n",
              "  const inputElement = document.getElementById(inputId);\n",
              "  inputElement.disabled = false;\n",
              "\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  outputElement.innerHTML = '';\n",
              "\n",
              "  const pickedPromise = new Promise((resolve) => {\n",
              "    inputElement.addEventListener('change', (e) => {\n",
              "      resolve(e.target.files);\n",
              "    });\n",
              "  });\n",
              "\n",
              "  const cancel = document.createElement('button');\n",
              "  inputElement.parentElement.appendChild(cancel);\n",
              "  cancel.textContent = 'Cancel upload';\n",
              "  const cancelPromise = new Promise((resolve) => {\n",
              "    cancel.onclick = () => {\n",
              "      resolve(null);\n",
              "    };\n",
              "  });\n",
              "\n",
              "  // Wait for the user to pick the files.\n",
              "  const files = yield {\n",
              "    promise: Promise.race([pickedPromise, cancelPromise]),\n",
              "    response: {\n",
              "      action: 'starting',\n",
              "    }\n",
              "  };\n",
              "\n",
              "  cancel.remove();\n",
              "\n",
              "  // Disable the input element since further picks are not allowed.\n",
              "  inputElement.disabled = true;\n",
              "\n",
              "  if (!files) {\n",
              "    return {\n",
              "      response: {\n",
              "        action: 'complete',\n",
              "      }\n",
              "    };\n",
              "  }\n",
              "\n",
              "  for (const file of files) {\n",
              "    const li = document.createElement('li');\n",
              "    li.append(span(file.name, {fontWeight: 'bold'}));\n",
              "    li.append(span(\n",
              "        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n",
              "        `last modified: ${\n",
              "            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n",
              "                                    'n/a'} - `));\n",
              "    const percent = span('0% done');\n",
              "    li.appendChild(percent);\n",
              "\n",
              "    outputElement.appendChild(li);\n",
              "\n",
              "    const fileDataPromise = new Promise((resolve) => {\n",
              "      const reader = new FileReader();\n",
              "      reader.onload = (e) => {\n",
              "        resolve(e.target.result);\n",
              "      };\n",
              "      reader.readAsArrayBuffer(file);\n",
              "    });\n",
              "    // Wait for the data to be ready.\n",
              "    let fileData = yield {\n",
              "      promise: fileDataPromise,\n",
              "      response: {\n",
              "        action: 'continue',\n",
              "      }\n",
              "    };\n",
              "\n",
              "    // Use a chunked sending to avoid message size limits. See b/62115660.\n",
              "    let position = 0;\n",
              "    do {\n",
              "      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n",
              "      const chunk = new Uint8Array(fileData, position, length);\n",
              "      position += length;\n",
              "\n",
              "      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n",
              "      yield {\n",
              "        response: {\n",
              "          action: 'append',\n",
              "          file: file.name,\n",
              "          data: base64,\n",
              "        },\n",
              "      };\n",
              "\n",
              "      let percentDone = fileData.byteLength === 0 ?\n",
              "          100 :\n",
              "          Math.round((position / fileData.byteLength) * 100);\n",
              "      percent.textContent = `${percentDone}% done`;\n",
              "\n",
              "    } while (position < fileData.byteLength);\n",
              "  }\n",
              "\n",
              "  // All done.\n",
              "  yield {\n",
              "    response: {\n",
              "      action: 'complete',\n",
              "    }\n",
              "  };\n",
              "}\n",
              "\n",
              "scope.google = scope.google || {};\n",
              "scope.google.colab = scope.google.colab || {};\n",
              "scope.google.colab._files = {\n",
              "  _uploadFiles,\n",
              "  _uploadFilesContinue,\n",
              "};\n",
              "})(self);\n",
              "</script> "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "from google.colab import files\n",
        "upload = files.upload()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 601
        },
        "collapsed": true,
        "id": "FxaQJhxKWM5N",
        "outputId": "96fcc899-0fb6-413e-fad6-1dd965b9f574"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "summary": "{\n  \"name\": \"df_penerima\",\n  \"rows\": 398,\n  \"fields\": [\n    {\n      \"column\": \"userName\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 398,\n        \"samples\": [\n          \"Ary Wibowo\",\n          \"achmad taufik\",\n          \"Sidik Darmawan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          2,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"at\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 398,\n        \"samples\": [\n          \"2024-04-01 13:58:03\",\n          \"2024-05-27 01:22:49\",\n          \"2023-12-26 12:14:34\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"content\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 398,\n        \"samples\": [\n          \"Saya turunin jd 3 bintang deh. Mau refund gak bs krn pilihan alasannya terlalu sempit. Masa refund nunggu, hamil, kematian, sm apa yg satu lupa. Buat alasan refund krn ubah rute krn kepentingan klrga gak bs. Hilang deh duit ku utk tiket 900 rb an. Kecewa2\",\n          \"sangat mudah dan praktis, semoga selalu amanah..\",\n          \"Dinsaat peak season saat ini tiba tiba hotel yang saya book di Traveloka bilang sudah oenuh. Dan ini kejadian kedua, saat saya liburan peak season di Kuala Lumpur thn 2018. Tidak ada tanggung jawab atas kerugian kami terluntanh lantung di malam hari sekeluarha mencari hotel pengganti\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}",
              "type": "dataframe",
              "variable_name": "df_penerima"
            },
            "text/html": [
              "\n",
              "  <div id=\"df-21ab75f3-f58b-42cb-8a82-2010e7d37f58\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>userName</th>\n",
              "      <th>score</th>\n",
              "      <th>at</th>\n",
              "      <th>content</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Nabila Firdausi</td>\n",
              "      <td>5</td>\n",
              "      <td>2023-12-14 07:34:43</td>\n",
              "      <td>Biasa beli tiket pesawat, hotel, tmpat rekreas...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Sheilla Andani</td>\n",
              "      <td>1</td>\n",
              "      <td>2023-12-15 00:18:48</td>\n",
              "      <td>Saya kecewa, awal2 nya nyaman karena ada payla...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Indri Lestari</td>\n",
              "      <td>5</td>\n",
              "      <td>2023-12-15 06:51:33</td>\n",
              "      <td>Adanya aplikasi Traveloka membantu aku yang su...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Amalia Kurnia Dewi</td>\n",
              "      <td>5</td>\n",
              "      <td>2023-12-16 03:47:44</td>\n",
              "      <td>Terima kasih banyak traveloka sudah menemani p...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Haikal Vold</td>\n",
              "      <td>5</td>\n",
              "      <td>2023-12-16 04:01:41</td>\n",
              "      <td>untuk UI aplikasinya udah mantap,dan fitur fit...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Arifatul Fuadah</td>\n",
              "      <td>5</td>\n",
              "      <td>2023-12-16 04:35:01</td>\n",
              "      <td>aplikasi ini bagus dan sangat membantu kita ya...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Quotes G_R_S Brother</td>\n",
              "      <td>1</td>\n",
              "      <td>2023-12-16 06:40:32</td>\n",
              "      <td>tolong konfirmasinya secepatnya kenapa saat sa...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>ALAN ADHITYO</td>\n",
              "      <td>1</td>\n",
              "      <td>2023-12-16 06:49:15</td>\n",
              "      <td>Voucer udah terbit di cancel di hari H, dengan...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Dimaz Febriyanto</td>\n",
              "      <td>1</td>\n",
              "      <td>2023-12-17 10:18:51</td>\n",
              "      <td>Terima kasih, saya mau refund tiket citilink s...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>dimasss dimasss</td>\n",
              "      <td>5</td>\n",
              "      <td>2023-12-17 10:53:53</td>\n",
              "      <td>Aplikasinya sangat bagus dan sangat membantu,b...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-21ab75f3-f58b-42cb-8a82-2010e7d37f58')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-21ab75f3-f58b-42cb-8a82-2010e7d37f58 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-21ab75f3-f58b-42cb-8a82-2010e7d37f58');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6b524980-3108-4f0e-bfe5-209e7f2f7712\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6b524980-3108-4f0e-bfe5-209e7f2f7712')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6b524980-3108-4f0e-bfe5-209e7f2f7712 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "               userName  score                   at  \\\n",
              "0       Nabila Firdausi      5  2023-12-14 07:34:43   \n",
              "1        Sheilla Andani      1  2023-12-15 00:18:48   \n",
              "2         Indri Lestari      5  2023-12-15 06:51:33   \n",
              "3    Amalia Kurnia Dewi      5  2023-12-16 03:47:44   \n",
              "4           Haikal Vold      5  2023-12-16 04:01:41   \n",
              "5       Arifatul Fuadah      5  2023-12-16 04:35:01   \n",
              "6  Quotes G_R_S Brother      1  2023-12-16 06:40:32   \n",
              "7          ALAN ADHITYO      1  2023-12-16 06:49:15   \n",
              "8      Dimaz Febriyanto      1  2023-12-17 10:18:51   \n",
              "9       dimasss dimasss      5  2023-12-17 10:53:53   \n",
              "\n",
              "                                             content  \n",
              "0  Biasa beli tiket pesawat, hotel, tmpat rekreas...  \n",
              "1  Saya kecewa, awal2 nya nyaman karena ada payla...  \n",
              "2  Adanya aplikasi Traveloka membantu aku yang su...  \n",
              "3  Terima kasih banyak traveloka sudah menemani p...  \n",
              "4  untuk UI aplikasinya udah mantap,dan fitur fit...  \n",
              "5  aplikasi ini bagus dan sangat membantu kita ya...  \n",
              "6  tolong konfirmasinya secepatnya kenapa saat sa...  \n",
              "7  Voucer udah terbit di cancel di hari H, dengan...  \n",
              "8  Terima kasih, saya mau refund tiket citilink s...  \n",
              "9  Aplikasinya sangat bagus dan sangat membantu,b...  "
            ]
          },
          "execution_count": 22,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df_penerima = pd.read_csv ('Traveloka.com.csv')\n",
        "df_penerima.head(10)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "AFE7nJ7azj8M"
      },
      "outputs": [],
      "source": [
        "def preprocess(text):\n",
        "  text = text.lower()\n",
        "  text=text.strip()\n",
        "  text=re.compile('<.*?').sub('', text)\n",
        "  text = re.compile('[%s]' % re.escape(string.punctuation)).sub('', text)\n",
        "  text = re.sub('\\s+', '', text)\n",
        "  text = re.sub(r'[[0-9]*\\]', '',text)\n",
        "  text=re.sub(r'[^\\w\\s]', '', str(text).lower().strip())\n",
        "  text = re.sub('\\d', '', text)\n",
        "  text = re.sub('\\s+', '', text)\n",
        "  return text"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "2BAbale_0AHX"
      },
      "outputs": [],
      "source": [
        "data.drop_duplicates(subset = 'content', keep = 'first', inplace = True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "yKrbL_Q-0Ex4"
      },
      "outputs": [],
      "source": [
        "df = pd.DataFrame(data[['userName', 'content']])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 494
        },
        "collapsed": true,
        "id": "hUNdNY-e0K_h",
        "outputId": "422127b2-38c0-4fc8-c17c-558440842fd1"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 398,\n  \"fields\": [\n    {\n      \"column\": \"userName\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 398,\n        \"samples\": [\n          \"Ary Wibowo\",\n          \"achmad taufik\",\n          \"Sidik Darmawan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"content\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 398,\n        \"samples\": [\n          \"Saya turunin jd 3 bintang deh. Mau refund gak bs krn pilihan alasannya terlalu sempit. Masa refund nunggu, hamil, kematian, sm apa yg satu lupa. Buat alasan refund krn ubah rute krn kepentingan klrga gak bs. Hilang deh duit ku utk tiket 900 rb an. Kecewa2\",\n          \"sangat mudah dan praktis, semoga selalu amanah..\",\n          \"Dinsaat peak season saat ini tiba tiba hotel yang saya book di Traveloka bilang sudah oenuh. Dan ini kejadian kedua, saat saya liburan peak season di Kuala Lumpur thn 2018. Tidak ada tanggung jawab atas kerugian kami terluntanh lantung di malam hari sekeluarha mencari hotel pengganti\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cleaning\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 398,\n        \"samples\": [\n          \"Saya turunin jd  bintang deh Mau refund gak bs krn pilihan alasannya terlalu sempit Masa refund nunggu hamil kematian sm apa yg satu lupa Buat alasan refund krn ubah rute krn kepentingan klrga gak bs Hilang deh duit ku utk tiket  rb an Kecewa\",\n          \"sangat mudah dan praktis semoga selalu amanah\",\n          \"Dinsaat peak season saat ini tiba tiba hotel yang saya book di Traveloka bilang sudah oenuh Dan ini kejadian kedua saat saya liburan peak season di Kuala Lumpur thn  Tidak ada tanggung jawab atas kerugian kami terluntanh lantung di malam hari sekeluarha mencari hotel pengganti\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}",
              "type": "dataframe",
              "variable_name": "df"
            },
            "text/html": [
              "\n",
              "  <div id=\"df-ed9f2210-70ac-4028-a2b5-baa49092c7c4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>userName</th>\n",
              "      <th>content</th>\n",
              "      <th>cleaning</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>243</th>\n",
              "      <td>Nabila Firdausi</td>\n",
              "      <td>Biasa beli tiket pesawat, hotel, tmpat rekreas...</td>\n",
              "      <td>Biasa beli tiket pesawat hotel tmpat rekreasi ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>230</th>\n",
              "      <td>Sheilla Andani</td>\n",
              "      <td>Saya kecewa, awal2 nya nyaman karena ada payla...</td>\n",
              "      <td>Saya kecewa awal nya nyaman karena ada paylatt...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>Indri Lestari</td>\n",
              "      <td>Adanya aplikasi Traveloka membantu aku yang su...</td>\n",
              "      <td>Adanya aplikasi Traveloka membantu aku yang su...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>269</th>\n",
              "      <td>Amalia Kurnia Dewi</td>\n",
              "      <td>Terima kasih banyak traveloka sudah menemani p...</td>\n",
              "      <td>Terima kasih banyak traveloka sudah menemani p...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>358</th>\n",
              "      <td>Haikal Vold</td>\n",
              "      <td>untuk UI aplikasinya udah mantap,dan fitur fit...</td>\n",
              "      <td>untuk UI aplikasinya udah mantapdan fitur fitu...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ed9f2210-70ac-4028-a2b5-baa49092c7c4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ed9f2210-70ac-4028-a2b5-baa49092c7c4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ed9f2210-70ac-4028-a2b5-baa49092c7c4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4fe15123-0739-4850-895a-9777c9fffdae\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4fe15123-0739-4850-895a-9777c9fffdae')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4fe15123-0739-4850-895a-9777c9fffdae button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "               userName                                            content  \\\n",
              "243     Nabila Firdausi  Biasa beli tiket pesawat, hotel, tmpat rekreas...   \n",
              "230      Sheilla Andani  Saya kecewa, awal2 nya nyaman karena ada payla...   \n",
              "366       Indri Lestari  Adanya aplikasi Traveloka membantu aku yang su...   \n",
              "269  Amalia Kurnia Dewi  Terima kasih banyak traveloka sudah menemani p...   \n",
              "358         Haikal Vold  untuk UI aplikasinya udah mantap,dan fitur fit...   \n",
              "\n",
              "                                              cleaning  \n",
              "243  Biasa beli tiket pesawat hotel tmpat rekreasi ...  \n",
              "230  Saya kecewa awal nya nyaman karena ada paylatt...  \n",
              "366  Adanya aplikasi Traveloka membantu aku yang su...  \n",
              "269  Terima kasih banyak traveloka sudah menemani p...  \n",
              "358  untuk UI aplikasinya udah mantapdan fitur fitu...  "
            ]
          },
          "execution_count": 26,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "import re\n",
        "import string\n",
        "import nltk\n",
        "\n",
        "def remove_URL(content):\n",
        "  url = re.compile(r'https?://\\S+|www\\.\\S+')\n",
        "  return url.sub(r'', content)\n",
        "\n",
        "def remove_html(content):\n",
        "  html = re.compile(r'<.*?>')\n",
        "  return html.sub(r'', content)\n",
        "\n",
        "def remove_numbers(content):\n",
        "  content = re.sub(r'\\d+', '', content)\n",
        "  return content\n",
        "\n",
        "def remove_symbols(content):\n",
        "  content = re.sub(r'[^a-zA-Z0-9\\s]', '', content)\n",
        "  return content\n",
        "\n",
        "df['cleaning'] = df['content'].apply(lambda x: remove_URL(x))\n",
        "df['cleaning'] = df['cleaning'].apply(lambda x: remove_html(x))\n",
        "df['cleaning'] = df['cleaning'].apply(lambda x: remove_numbers(x))\n",
        "df['cleaning'] = df['cleaning'].apply(lambda x: remove_symbols(x))\n",
        "\n",
        "df.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Lz15DNqi0SyI",
        "outputId": "8fd7e8e6-0a21-4006-89c3-3d070b0f29c1"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "case_folding : \n",
            "\n",
            "243    biasa beli tiket pesawat hotel tmpat rekreasi ...\n",
            "230    saya kecewa awal nya nyaman karena ada paylatt...\n",
            "366    adanya aplikasi traveloka membantu aku yang su...\n",
            "269    terima kasih banyak traveloka sudah menemani p...\n",
            "358    untuk ui aplikasinya udah mantapdan fitur fitu...\n",
            "Name: case_folding, dtype: object\n",
            "\n",
            "\n",
            "\n",
            "\n"
          ]
        }
      ],
      "source": [
        "def case_folding(text):\n",
        "  if isinstance(text, str):\n",
        "    lowercase_text = text.lower()\n",
        "    return lowercase_text\n",
        "\n",
        "df['case_folding'] = df['cleaning'].apply(case_folding)\n",
        "print('case_folding : \\n')\n",
        "print(df['case_folding'].head())\n",
        "print(\"\\n\\n\\n\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "0mAAjWK20g10",
        "outputId": "0406e884-f1dd-4f1e-a5c5-c3083846d6c7"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "tokenize : \n",
            "\n",
            "243    [biasa, beli, tiket, pesawat, hotel, tmpat, re...\n",
            "230    [saya, kecewa, awal, nya, nyaman, karena, ada,...\n",
            "366    [adanya, aplikasi, traveloka, membantu, aku, y...\n",
            "269    [terima, kasih, banyak, traveloka, sudah, mene...\n",
            "358    [untuk, ui, aplikasinya, udah, mantapdan, fitu...\n",
            "Name: tokenize, dtype: object\n",
            "\n",
            "\n",
            "\n",
            "\n"
          ]
        }
      ],
      "source": [
        "def word_tokenize_wrapper(text):\n",
        "  tokens = text.split()\n",
        "  return tokens\n",
        "\n",
        "df['tokenize'] = df['case_folding'].apply(word_tokenize_wrapper)\n",
        "print('tokenize : \\n')\n",
        "print(df['tokenize'].head())\n",
        "print(\"\\n\\n\\n\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KaDJ412G0jdT",
        "outputId": "865cc436-1450-4499-d2f5-b20ca14fb28e"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[nltk_data] Downloading package stopwords to /root/nltk_data...\n",
            "[nltk_data]   Package stopwords is already up-to-date!\n"
          ]
        }
      ],
      "source": [
        "from nltk.corpus import stopwords\n",
        "nltk.download('stopwords')\n",
        "stop_words = stopwords.words('indonesian')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "jMy4G_h20m_w",
        "outputId": "635cb5f9-83e7-4529-e386-07f5a32b4020"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "filtering : \n",
            "\n",
            "243    [beli, tiket, pesawat, hotel, tmpat, rekreasi,...\n",
            "230    [kecewa, nya, nyaman, paylatter, yg, membantu,...\n",
            "366    [aplikasi, traveloka, membantu, suka, travelin...\n",
            "269    [terima, kasih, traveloka, menemani, perjalnan...\n",
            "358    [ui, aplikasinya, udah, mantapdan, fitur, fitu...\n",
            "Name: filtering, dtype: object\n",
            "\n",
            "\n",
            "\n",
            "\n"
          ]
        }
      ],
      "source": [
        "def remove_stopwords(text):\n",
        "  return [word for word in text if word not in stop_words]\n",
        "\n",
        "df['filtering'] = df['tokenize'].apply(lambda x: remove_stopwords(x))\n",
        "print('filtering : \\n')\n",
        "print(df['filtering'].head())\n",
        "print(\"\\n\\n\\n\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "K4xfN2gU0zAp",
        "outputId": "809b1166-ab2c-43f8-e711-148800ddeedf"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Requirement already satisfied: Sastrawi in /usr/local/lib/python3.10/dist-packages (1.0.1)\n"
          ]
        }
      ],
      "source": [
        "!pip install Sastrawi\n",
        "\n",
        "from Sastrawi.Stemmer.StemmerFactory import StemmerFactory\n",
        "stem_factory = StemmerFactory()\n",
        "stemmer = stem_factory.create_stemmer()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": true,
        "id": "MDLDSBx908xx"
      },
      "outputs": [],
      "source": [
        "def stemming_text(tokens):\n",
        "  hasil = [stemmer.stem(token) for token in tokens]\n",
        "  return hasil"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 379
        },
        "collapsed": true,
        "id": "LCljAgVHeQvj",
        "outputId": "3128f549-736c-4d02-f8c8-3e16e0f9ea1b"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 398,\n  \"fields\": [\n    {\n      \"column\": \"userName\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 398,\n        \"samples\": [\n          \"Ary Wibowo\",\n          \"achmad taufik\",\n          \"Sidik Darmawan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"content\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 398,\n        \"samples\": [\n          \"Saya turunin jd 3 bintang deh. Mau refund gak bs krn pilihan alasannya terlalu sempit. Masa refund nunggu, hamil, kematian, sm apa yg satu lupa. Buat alasan refund krn ubah rute krn kepentingan klrga gak bs. Hilang deh duit ku utk tiket 900 rb an. Kecewa2\",\n          \"sangat mudah dan praktis, semoga selalu amanah..\",\n          \"Dinsaat peak season saat ini tiba tiba hotel yang saya book di Traveloka bilang sudah oenuh. Dan ini kejadian kedua, saat saya liburan peak season di Kuala Lumpur thn 2018. Tidak ada tanggung jawab atas kerugian kami terluntanh lantung di malam hari sekeluarha mencari hotel pengganti\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cleaning\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 398,\n        \"samples\": [\n          \"Saya turunin jd  bintang deh Mau refund gak bs krn pilihan alasannya terlalu sempit Masa refund nunggu hamil kematian sm apa yg satu lupa Buat alasan refund krn ubah rute krn kepentingan klrga gak bs Hilang deh duit ku utk tiket  rb an Kecewa\",\n          \"sangat mudah dan praktis semoga selalu amanah\",\n          \"Dinsaat peak season saat ini tiba tiba hotel yang saya book di Traveloka bilang sudah oenuh Dan ini kejadian kedua saat saya liburan peak season di Kuala Lumpur thn  Tidak ada tanggung jawab atas kerugian kami terluntanh lantung di malam hari sekeluarha mencari hotel pengganti\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"case_folding\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 397,\n        \"samples\": [\n          \"limit paylater awal jt sudah saya pakai x untuk pesan hotel sekitar rp  termasuk cicilan  bulan sdh x pembayaranartinya sisa cicilan rp  dan seharusnya limit masih bisa digunakan jt an tetapi diaplikasi limit saya menjadi nol level bronze mau transaksi menggunakan paylater lagi jadi ga bisa percuma dong dikasih limit jt\",\n          \"ringkas gampang cuma belum pernah dpt tiketcouponvoucher promonya sarannya kalau ada bisa langsung terpasang\",\n          \"dulu selalu pakai traveloka tp sekarang pelayanannya kurang bgt minta proses reschedule aja berteletele keterangan batas reschedule jam  pagi padahal pesennya aja jam  siang di hari yg sama minta reschedule oper sanasini proses pihak mitranya lama bgt padahal pihak hotel sudah konfirmasi bisa info dari cs traveloka maksima x mnit proses rechedule saya nunggu hampir  jam di lobby hotel blm ada kejelasan tolong di perbaiki proses mitranya\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tokenize\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"filtering\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"stemming\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}",
              "type": "dataframe",
              "variable_name": "df"
            },
            "text/html": [
              "\n",
              "  <div id=\"df-9e73fd1d-27c4-4e30-a7aa-ba0f6fb4efdb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>userName</th>\n",
              "      <th>content</th>\n",
              "      <th>cleaning</th>\n",
              "      <th>case_folding</th>\n",
              "      <th>tokenize</th>\n",
              "      <th>filtering</th>\n",
              "      <th>stemming</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>243</th>\n",
              "      <td>Nabila Firdausi</td>\n",
              "      <td>Biasa beli tiket pesawat, hotel, tmpat rekreas...</td>\n",
              "      <td>Biasa beli tiket pesawat hotel tmpat rekreasi ...</td>\n",
              "      <td>biasa beli tiket pesawat hotel tmpat rekreasi ...</td>\n",
              "      <td>[biasa, beli, tiket, pesawat, hotel, tmpat, re...</td>\n",
              "      <td>[beli, tiket, pesawat, hotel, tmpat, rekreasi,...</td>\n",
              "      <td>[beli, tiket, pesawat, hotel, tmpat, rekreasi,...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>230</th>\n",
              "      <td>Sheilla Andani</td>\n",
              "      <td>Saya kecewa, awal2 nya nyaman karena ada payla...</td>\n",
              "      <td>Saya kecewa awal nya nyaman karena ada paylatt...</td>\n",
              "      <td>saya kecewa awal nya nyaman karena ada paylatt...</td>\n",
              "      <td>[saya, kecewa, awal, nya, nyaman, karena, ada,...</td>\n",
              "      <td>[kecewa, nya, nyaman, paylatter, yg, membantu,...</td>\n",
              "      <td>[kecewa, nya, nyaman, paylatter, yg, bantu, le...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>Indri Lestari</td>\n",
              "      <td>Adanya aplikasi Traveloka membantu aku yang su...</td>\n",
              "      <td>Adanya aplikasi Traveloka membantu aku yang su...</td>\n",
              "      <td>adanya aplikasi traveloka membantu aku yang su...</td>\n",
              "      <td>[adanya, aplikasi, traveloka, membantu, aku, y...</td>\n",
              "      <td>[aplikasi, traveloka, membantu, suka, travelin...</td>\n",
              "      <td>[aplikasi, traveloka, bantu, suka, traveling, ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>269</th>\n",
              "      <td>Amalia Kurnia Dewi</td>\n",
              "      <td>Terima kasih banyak traveloka sudah menemani p...</td>\n",
              "      <td>Terima kasih banyak traveloka sudah menemani p...</td>\n",
              "      <td>terima kasih banyak traveloka sudah menemani p...</td>\n",
              "      <td>[terima, kasih, banyak, traveloka, sudah, mene...</td>\n",
              "      <td>[terima, kasih, traveloka, menemani, perjalnan...</td>\n",
              "      <td>[terima, kasih, traveloka, tani, perjalnanku, ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>358</th>\n",
              "      <td>Haikal Vold</td>\n",
              "      <td>untuk UI aplikasinya udah mantap,dan fitur fit...</td>\n",
              "      <td>untuk UI aplikasinya udah mantapdan fitur fitu...</td>\n",
              "      <td>untuk ui aplikasinya udah mantapdan fitur fitu...</td>\n",
              "      <td>[untuk, ui, aplikasinya, udah, mantapdan, fitu...</td>\n",
              "      <td>[ui, aplikasinya, udah, mantapdan, fitur, fitu...</td>\n",
              "      <td>[ui, aplikasi, udah, mantapdan, fitur, fitur, ...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9e73fd1d-27c4-4e30-a7aa-ba0f6fb4efdb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9e73fd1d-27c4-4e30-a7aa-ba0f6fb4efdb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9e73fd1d-27c4-4e30-a7aa-ba0f6fb4efdb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0add1e20-19d5-4254-b2d0-b9de0caa2a76\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0add1e20-19d5-4254-b2d0-b9de0caa2a76')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0add1e20-19d5-4254-b2d0-b9de0caa2a76 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "               userName                                            content  \\\n",
              "243     Nabila Firdausi  Biasa beli tiket pesawat, hotel, tmpat rekreas...   \n",
              "230      Sheilla Andani  Saya kecewa, awal2 nya nyaman karena ada payla...   \n",
              "366       Indri Lestari  Adanya aplikasi Traveloka membantu aku yang su...   \n",
              "269  Amalia Kurnia Dewi  Terima kasih banyak traveloka sudah menemani p...   \n",
              "358         Haikal Vold  untuk UI aplikasinya udah mantap,dan fitur fit...   \n",
              "\n",
              "                                              cleaning  \\\n",
              "243  Biasa beli tiket pesawat hotel tmpat rekreasi ...   \n",
              "230  Saya kecewa awal nya nyaman karena ada paylatt...   \n",
              "366  Adanya aplikasi Traveloka membantu aku yang su...   \n",
              "269  Terima kasih banyak traveloka sudah menemani p...   \n",
              "358  untuk UI aplikasinya udah mantapdan fitur fitu...   \n",
              "\n",
              "                                          case_folding  \\\n",
              "243  biasa beli tiket pesawat hotel tmpat rekreasi ...   \n",
              "230  saya kecewa awal nya nyaman karena ada paylatt...   \n",
              "366  adanya aplikasi traveloka membantu aku yang su...   \n",
              "269  terima kasih banyak traveloka sudah menemani p...   \n",
              "358  untuk ui aplikasinya udah mantapdan fitur fitu...   \n",
              "\n",
              "                                              tokenize  \\\n",
              "243  [biasa, beli, tiket, pesawat, hotel, tmpat, re...   \n",
              "230  [saya, kecewa, awal, nya, nyaman, karena, ada,...   \n",
              "366  [adanya, aplikasi, traveloka, membantu, aku, y...   \n",
              "269  [terima, kasih, banyak, traveloka, sudah, mene...   \n",
              "358  [untuk, ui, aplikasinya, udah, mantapdan, fitu...   \n",
              "\n",
              "                                             filtering  \\\n",
              "243  [beli, tiket, pesawat, hotel, tmpat, rekreasi,...   \n",
              "230  [kecewa, nya, nyaman, paylatter, yg, membantu,...   \n",
              "366  [aplikasi, traveloka, membantu, suka, travelin...   \n",
              "269  [terima, kasih, traveloka, menemani, perjalnan...   \n",
              "358  [ui, aplikasinya, udah, mantapdan, fitur, fitu...   \n",
              "\n",
              "                                              stemming  \n",
              "243  [beli, tiket, pesawat, hotel, tmpat, rekreasi,...  \n",
              "230  [kecewa, nya, nyaman, paylatter, yg, bantu, le...  \n",
              "366  [aplikasi, traveloka, bantu, suka, traveling, ...  \n",
              "269  [terima, kasih, traveloka, tani, perjalnanku, ...  \n",
              "358  [ui, aplikasi, udah, mantapdan, fitur, fitur, ...  "
            ]
          },
          "execution_count": 33,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df['stemming'] = df['filtering'].apply(stemming_text)\n",
        "df.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "LsD1XbfuWsLh"
      },
      "outputs": [],
      "source": [
        "df.to_csv('hasil-preprocessing.csv',encoding='utf8', index=False)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "K1H8Z39QYNyB"
      },
      "outputs": [],
      "source": [
        "from nltk.probability import FreqDist"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "47fq5uvsYxRJ"
      },
      "outputs": [],
      "source": [
        "import matplotlib.pyplot as plt"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ql3CdfZQZWCC",
        "outputId": "625ab086-cde6-449e-d4b9-9e9a554282be"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[('traveloka', 221), ('aplikasi', 199), ('tiket', 174), ('nya', 143), ('bayar', 126), ('hotel', 117), ('yg', 115), ('gak', 95), ('refund', 82), ('harga', 69), ('paylater', 67), ('ga', 66), ('pakai', 65), ('pesan', 65), ('beli', 59), ('pesawat', 59), ('mudah', 54), ('tolong', 51), ('aja', 47), ('kecewa', 46), ('bantu', 45), ('limit', 44), ('banget', 43), ('ya', 39), ('uang', 38), ('kasih', 36), ('udah', 35), ('bagus', 35), ('pake', 35), ('maskapai', 34), ('jam', 34), ('proses', 34), ('cari', 33), ('layan', 33), ('batal', 32), ('sy', 31), ('pas', 30), ('terbang', 30), ('baik', 29), ('turun', 29), ('cs', 28), ('reschedule', 28), ('ubah', 28), ('ribet', 27), ('mesan', 27), ('masuk', 26), ('rugi', 26), ('berangkat', 26), ('pilih', 25), ('apk', 25), ('bgt', 25), ('tdk', 24), ('tp', 24), ('cek', 24), ('alas', 23), ('bintang', 23), ('langsung', 23), ('dana', 23), ('level', 23), ('telat', 22), ('dgn', 22), ('sedia', 22), ('sistem', 22), ('guna', 22), ('jalan', 21), ('kali', 21), ('x', 21), ('tanggal', 21), ('suka', 20), ('terima', 20), ('biaya', 19), ('sdh', 19), ('sesuai', 19), ('langgan', 19), ('promo', 18), ('salah', 18), ('cepat', 18), ('aneh', 18), ('murah', 18), ('kembali', 18), ('update', 18), ('info', 17), ('jadwal', 17), ('mahal', 17), ('transaksi', 17), ('susah', 17), ('jd', 17), ('tau', 16), ('sulit', 16), ('coba', 16), ('tunggu', 16), ('d', 16), ('tgl', 16), ('udh', 16), ('klo', 15), ('hubung', 15), ('terimakasih', 15), ('fitur', 15), ('jt', 15), ('belah', 15), ('kena', 15), ('potong', 15), ('booking', 15), ('in', 15), ('etiket', 15), ('dr', 15), ('kalo', 14), ('karna', 14), ('tagih', 14), ('kamar', 14), ('buruk', 14), ('utk', 14), ('bikin', 14), ('customer', 13), ('konfirmasi', 13), ('kereta', 13), ('hati', 13), ('lambat', 13), ('parah', 13), ('app', 13), ('jatuh', 13), ('tempo', 13), ('mohon', 13), ('jg', 12), ('suruh', 12), ('rb', 12), ('terbit', 12), ('dah', 12), ('gk', 12), ('ganti', 12), ('mending', 12), ('jelek', 12), ('kendala', 12), ('email', 12), ('gimana', 12), ('bus', 12), ('inap', 12), ('aju', 12), ('lg', 12), ('aman', 11), ('libur', 11), ('sampe', 11), ('sen', 11), ('tuju', 11), ('cicil', 11), ('bs', 11), ('transfer', 11), ('muncul', 11), ('iklan', 11), ('moga', 11), ('butuh', 11), ('pindah', 11), ('kerja', 10), ('orang', 10), ('tipu', 10), ('hilang', 10), ('sih', 10), ('nih', 10), ('duit', 10), ('diskon', 9), ('tinggal', 9), ('skrg', 9), ('cancel', 9), ('destinasi', 9), ('bilang', 9), ('min', 9), ('check', 9), ('lancar', 9), ('akun', 9), ('menit', 9), ('tera', 9), ('nunggu', 9), ('bunga', 9), ('nyaman', 8), ('klik', 8), ('rekomendasi', 8), ('travel', 8), ('dadak', 8), ('tanggung', 8), ('penuh', 8), ('konsumen', 8), ('up', 8), ('beda', 8), ('foto', 8), ('sukses', 8), ('juta', 8), ('tulis', 8), ('percaya', 8), ('virtual', 8), ('nilai', 8), ('gue', 8), ('main', 7), ('indonesia', 7), ('mana', 7), ('tambah', 7), ('ribu', 7), ('bandara', 7), ('voucher', 7), ('daftar', 7), ('pay', 7), ('untung', 7), ('ni', 7), ('naik', 7), ('deh', 7), ('ulang', 7), ('habis', 7), ('pergi', 7), ('oke', 7), ('trus', 7), ('ganggu', 7), ('tlp', 7), ('nama', 7), ('ngga', 7), ('buka', 7), ('gabisa', 7), ('jgn', 7), ('bijak', 7), ('bahasa', 7), ('krn', 7), ('error', 7), ('gercep', 7), ('promonya', 6), ('menu', 6), ('mes', 6), ('selesai', 6), ('h', 6), ('an', 6), ('wisata', 6), ('hapus', 6), ('gitu', 6), ('dlm', 6), ('blm', 6), ('download', 6), ('banding', 6), ('masalah', 6), ('chat', 6), ('solusi', 6), ('kupon', 6), ('maaf', 6), ('jadi', 6), ('eh', 6), ('lumayan', 6), ('aktif', 6), ('akomodasi', 6), ('tipe', 6), ('isi', 6), ('emang', 6), ('online', 6), ('kapok', 6), ('bener', 6), ('rubah', 6), ('berat', 6), ('tolak', 6), ('sumpah', 6), ('dri', 6), ('tmpt', 6), ('respon', 6), ('yah', 6), ('gilir', 6), ('males', 6), ('kadang', 6), ('andal', 6), ('kirim', 6), ('nggak', 6), ('maret', 6), ('perhati', 6), ('data', 6), ('klu', 6), ('telepon', 6), ('k', 6), ('paylatter', 5), ('traveling', 5), ('jaring', 5), ('order', 5), ('tawar', 5), ('bug', 5), ('makan', 5), ('full', 5), ('point', 5), ('terang', 5), ('kait', 5), ('lengkap', 5), ('jamin', 5), ('pokok', 5), ('kacau', 5), ('malam', 5), ('hp', 5), ('telfon', 5), ('rute', 5), ('keren', 5), ('saran', 5), ('sayang', 5), ('masukin', 5), ('hasil', 5), ('jelas', 5), ('iya', 5), ('poin', 5), ('top', 5), ('boking', 5), ('alam', 5), ('uninstall', 5), ('rating', 5), ('gara', 5), ('cash', 5), ('kendara', 5), ('tangan', 5), ('ttp', 5), ('org', 5), ('kursi', 5), ('apps', 5), ('paksa', 5), ('nga', 5), ('turunin', 5), ('minggu', 5), ('sya', 5), ('sma', 5), ('homestay', 5), ('paylaternya', 5), ('nomer', 5), ('ny', 5), ('ad', 5), ('gin', 5), ('setia', 5), ('ngk', 5), ('total', 5), ('siang', 5), ('tpi', 5), ('balas', 5), ('nonaktif', 5), ('otomatis', 5), ('tggl', 5), ('nambah', 5), ('atraksi', 4), ('bnyk', 4), ('lebih', 4), ('pagi', 4), ('bal', 4), ('anak', 4), ('suami', 4), ('puas', 4), ('kenal', 4), ('engga', 4), ('best', 4), ('belanja', 4), ('rp', 4), ('nyata', 4), ('kredit', 4), ('kota', 4), ('abis', 4), ('jangkau', 4), ('rescedule', 4), ('internet', 4), ('travelio', 4), ('sewa', 4), ('alami', 4), ('pulsa', 4), ('it', 4), ('atur', 4), ('no', 4), ('login', 4), ('kaya', 4), ('lapor', 4), ('dulax', 4), ('montain', 4), ('view', 4), ('tingkat', 4), ('angkat', 4), ('nomor', 4), ('kak', 4), ('ngasih', 4), ('bad', 4), ('payah', 4), ('batas', 4), ('dipake', 4), ('hangus', 4), ('baru', 4), ('koneksi', 4), ('partner', 4), ('mobil', 4), ('tanggap', 4), ('informasi', 4), ('later', 4), ('batalin', 4), ('duduk', 4), ('mantap', 4), ('number', 4), ('terus', 4), ('takut', 4), ('februari', 4), ('e', 4), ('ratus', 4), ('pulang', 4), ('profesional', 4), ('atas', 4), ('sblmnya', 4), ('malas', 4), ('senang', 4), ('dpt', 4), ('makasih', 4), ('jebak', 4), ('ambil', 4), ('y', 4), ('admin', 4), ('upgrade', 4), ('ehh', 4), ('kembang', 4), ('pasang', 4), ('g', 4), ('th', 4), ('jemput', 4), ('tele', 4), ('gw', 4), ('mundur', 4), ('tmpat', 3), ('rekreasi', 3), ('nginep', 3), ('bsa', 3), ('blokir', 3), ('saldo', 3), ('telpon', 3), ('good', 3), ('manfaat', 3), ('jujur', 3), ('easy', 3), ('hitung', 3), ('byk', 3), ('dll', 3), ('repot', 3), ('lunas', 3), ('tibatiba', 3), ('letter', 3), ('sengaja', 3), ('modus', 3), ('kartu', 3), ('liat', 3), ('versi', 3), ('tindak', 3), ('gajelas', 3), ('tampil', 3), ('apartemen', 3), ('case', 3), ('tutup', 3), ('domestik', 3), ('mengunakan', 3), ('akses', 3), ('bot', 3), ('book', 3), ('csnya', 3), ('dompet', 3), ('verifikasi', 3), ('banyak', 3), ('budget', 3), ('rencana', 3), ('transportasi', 3), ('rekening', 3), ('keluarga', 3), ('hari', 3), ('paspor', 3), ('knapa', 3), ('kasi', 3), ('alhasil', 3), ('masak', 3), ('lipat', 3), ('thanks', 3), ('lempar', 3), ('lihat', 3), ('jual', 3), ('pasti', 3), ('sekian', 3), ('reservasi', 3), ('mulu', 3), ('paham', 3), ('rental', 3), ('ujung', 3), ('makasar', 3), ('delay', 3), ('ragu', 3), ('review', 3), ('sampah', 3), ('komplain', 3), ('ka', 3), ('inggris', 3), ('aplikas', 3), ('instal', 3), ('posisi', 3), ('bank', 3), ('nyampe', 3), ('tahun', 3), ('sngat', 3), ('cc', 3), ('credit', 3), ('hrs', 3), ('robot', 3), ('skor', 3), ('kesini', 3), ('klaim', 3), ('cuman', 3), ('balikin', 3), ('tentu', 3), ('simpel', 3), ('metode', 3), ('jdi', 3), ('double', 3), ('uda', 3), ('kerjasama', 3), ('niat', 3), ('baca', 3), ('sempet', 3), ('sesal', 3), ('tf', 3), ('mesti', 3), ('team', 3), ('kyk', 3), ('kode', 3), ('keliru', 3), ('april', 3), ('cocok', 3), ('kabur', 3), ('opsi', 3), ('eror', 3), ('n', 3), ('sebal', 3), ('alih', 3), ('bawa', 3), ('konsisten', 3), ('sm', 3), ('pdhl', 3), ('maka', 3), ('hrga', 3), ('gampang', 3), ('depan', 3), ('trimakasih', 3), ('yaa', 3), ('titik', 3), ('oper', 3), ('enak', 3), ('benah', 3), ('pd', 3), ('stasiun', 3), ('pdhal', 3), ('vendor', 3), ('gagal', 3), ('notifikasi', 3), ('msh', 3), ('debt', 3), ('angka', 3), ('bingung', 3), ('php', 3), ('hihi', 2), ('semangat', 2), ('bareng', 2), ('ui', 2), ('dalam', 2), ('giat', 2), ('besok', 2), ('notif', 2), ('merefund', 2), ('alesan', 2), ('worry', 2), ('fungsi', 2), ('temu', 2), ('ucap', 2), ('negeri', 2), ('tuh', 2), ('rasa', 2), ('andai', 2), ('paylaterku', 2), ('api', 2), ('nol', 2), ('sihh', 2), ('booked', 2), ('janji', 2), ('fatal', 2), ('pinalty', 2), ('produk', 2), ('arah', 2), ('dokumen', 2), ('kolektor', 2), ('rumah', 2), ('temen', 2), ('gausah', 2), ('amanah', 2), ('fiturnya', 2), ('rekomended', 2), ('kemaren', 2), ('dapet', 2), ('thankyou', 2), ('beranda', 2), ('refresh', 2), ('sambung', 2), ('prosedur', 2), ('praktis', 2), ('travelokasaya', 2), ('discount', 2), ('lobby', 2), ('peak', 2), ('season', 2), ('thn', 2), ('kosong', 2), ('ting', 2), ('tempathotel', 2), ('sangkut', 2), ('so', 2), ('td', 2), ('pdahal', 2), ('luar', 2), ('taun', 2), ('dinas', 2), ('oyo', 2), ('budi', 2), ('alamat', 2), ('lbh', 2), ('balkon', 2), ('cetak', 2), ('bawah', 2), ('simple', 2), ('angsur', 2), ('sore', 2), ('menggangu', 2), ('jakarta', 2), ('formulir', 2), ('checkin', 2), ('the', 2), ('account', 2), ('sebenernya', 2), ('tarik', 2), ('biar', 2), ('syaa', 2), ('by', 2), ('anggap', 2), ('ajak', 2), ('driver', 2), ('mula', 2), ('komunikasi', 2), ('nang', 2), ('jasa', 2), ('diam', 2), ('duga', 2), ('recommended', 2), ('hamil', 2), ('goodjob', 2), ('operasional', 2), ('pribadi', 2), ('kemarin', 2), ('chekin', 2), ('januari', 2), ('naikin', 2), ('status', 2), ('usaha', 2), ('luwuk', 2), ('balikpapan', 2), ('milik', 2), ('invoice', 2), ('nombok', 2), ('tim', 2), ('call', 2), ('bicara', 2), ('embel', 2), ('kepala', 2), ('atm', 2), ('histori', 2), ('tetep', 2), ('bukti', 2), ('ikhlas', 2), ('reschedul', 2), ('digital', 2), ('bahagia', 2), ('laku', 2), ('didownload', 2), ('santai', 2), ('nampil', 2), ('milih', 2), ('dlu', 2), ('akal', 2), ('alhamdulillah', 2), ('install', 2), ('youtube', 2), ('urgent', 2), ('pmbayaran', 2), ('akn', 2), ('bulan', 2), ('kesan', 2), ('link', 2), ('suru', 2), ('approve', 2), ('pending', 2), ('koq', 2), ('darurat', 2), ('auto', 2), ('de', 2), ('bookingnya', 2), ('curang', 2), ('sisa', 2), ('segi', 2), ('knp', 2), ('record', 2), ('healing', 2), ('next', 2), ('rame', 2), ('estetik', 2), ('hehehe', 2), ('gambar', 2), ('fokus', 2), ('perlahan', 2), ('musti', 2), ('card', 2), ('tu', 2), ('payment', 2), ('lanjur', 2), ('qris', 2), ('makassar', 2), ('sulawesi', 2), ('selatan', 2), ('travelokatolong', 2), ('drastis', 2), ('rutin', 2), ('mw', 2), ('downgrade', 2), ('batu', 2), ('komentar', 2), ('kantor', 2), ('dicancel', 2), ('refound', 2), ('fair', 2), ('sdah', 2), ('lejit', 2), ('travelindo', 2), ('ptanak', 2), ('bangsa', 2), ('urus', 2), ('tsb', 2), ('bln', 2), ('hr', 2), ('via', 2), ('pusing', 2), ('sinyal', 2), ('minus', 2), ('negara', 2), ('nyesel', 2), ('sblm', 2), ('direfund', 2), ('skrng', 2), ('ulas', 2), ('tlg', 2), ('mlm', 2), ('selfie', 2), ('kamera', 2), ('kabar', 2), ('banyakin', 2), ('maps', 2), ('dasar', 2), ('mudik', 2), ('detail', 2), ('cepet', 2), ('ramah', 2), ('travelokanya', 2), ('si', 2), ('smp', 2), ('dak', 2), ('selisih', 2), ('agoda', 2), ('lupa', 2), ('toko', 2), ('cpt', 2), ('cashback', 2), ('ditraveloka', 2), ('trnyta', 2), ('pke', 2), ('keluh', 2), ('putus', 2), ('rechedule', 2), ('sok', 2), ('segitu', 2), ('report', 2), ('mitra', 2), ('user', 2), ('klau', 2), ('syarat', 2), ('keponakan', 2), ('semarang', 2), ('solo', 2), ('apl', 2), ('dbwah', 2), ('tumpang', 2), ('terminal', 2), ('responya', 2), ('acc', 2), ('airport', 2), ('nyari', 2), ('spam', 2), ('prioritas', 2), ('trac', 2), ('nyoba', 2), ('gmn', 2), ('pt', 2), ('dibatalin', 2), ('donk', 2), ('byr', 2), ('lion', 2), ('muas', 2), ('nada', 2), ('tutorial', 2), ('mandiri', 2), ('collectornya', 2), ('nagih', 2), ('kek', 2), ('tanyain', 2), ('vocer', 2), ('hormat', 2), ('depa', 2), ('awal', 2), ('bngt', 2), ('rekomend', 2), ('pelit', 2), ('ancam', 2), ('pemberitahuan', 2), ('bis', 2), ('dn', 2), ('manajemen', 2), ('jaman', 2), ('refoud', 2), ('ditelfonin', 2), ('nge', 1), ('kenap', 1), ('dipakaidi', 1), ('buta', 1), ('emaill', 1), ('permanen', 1), ('kliling', 1), ('indah', 1), ('tani', 1), ('perjalnanku', 1), ('bogor', 1), ('banten', 1), ('palembang', 1), ('bentar', 1), ('borneo', 1), ('single', 1), ('nikmat', 1), ('hidup', 1), ('nemu', 1), ('mantapdan', 1), ('banyakhingga', 1), ('bertraveling', 1), ('mereschedule', 1), ('masala', 1), ('voucer', 1), ('citilink', 1), ('reject', 1), ('membantubanyak', 1), ('bibtang', 1), ('ratarata', 1), ('bucharest', 1), ('nila', 1), ('instagram', 1), ('apaapa', 1), ('bingkis', 1), ('ndak', 1), ('super', 1), ('sdhlah', 1), ('rejeki', 1), ('hibur', 1), ('kemari', 1), ('dikabarin', 1), ('slow', 1), ('respond', 1), ('gaada', 1), ('high', 1), ('seasoned', 1), ('manipulasi', 1), ('itulahkalo', 1), ('ngajukan', 1), ('susahpotong', 1), ('dananyataik', 1), ('motong', 1), ('terbanglebih', 1), ('cair', 1), ('bisa', 1), ('la', 1), ('travelokabulan', 1), ('juli', 1), ('cashtapi', 1), ('setor', 1), ('sayamohon', 1), ('kejelasanbuat', 1), ('dateng', 1), ('halaman', 1), ('bangetdan', 1), ('tawarkanjika', 1), ('perangkat', 1), ('nyewain', 1), ('diarahin', 1), ('belibet', 1), ('sebab', 1), ('chatnya', 1), ('dapatin', 1), ('kendalatapi', 1), ('todak', 1), ('terakomodir', 1), ('ditelfn', 1), ('follow', 1), ('doang', 1), ('lambung', 1), ('wort', 1), ('dinsaat', 1), ('oenuh', 1), ('kuala', 1), ('lumpur', 1), ('terluntanh', 1), ('lantung', 1), ('sekeluarha', 1), ('setting', 1), ('sis', 1), ('refundatau', 1), ('hack', 1), ('ayok', 1), ('segara', 1), ('guys', 1), ('nginap', 1), ('nyamanaman', 1), ('dirancanakan', 1), ('resechedule', 1), ('far', 1), ('sing', 1), ('china', 1), ('req', 1), ('kunming', 1), ('to', 1), ('batam', 1), ('sttus', 1), ('aplikasiberguna', 1), ('menarikturis', 1), ('inu', 1), ('keretahotel', 1), ('wahana', 1), ('sosmed', 1), ('kantong', 1), ('hehehee', 1), ('inspeksi', 1), ('kala', 1), ('fasilitas', 1), ('muat', 1), ('kondisi', 1), ('mantab', 1), ('syariah', 1), ('pekanbaru', 1), ('ketemu', 1), ('jawabangimana', 1), ('type', 1), ('silah', 1), ('approved', 1), ('hostel', 1), ('jenis', 1), ('referensi', 1), ('jempoll', 1), ('plis', 1), ('bom', 1), ('kenyam', 1), ('sampek', 1), ('phnom', 1), ('penh', 1), ('febuari', 1), ('lahir', 1), ('sleeper', 1), ('help', 1), ('sihtapi', 1), ('stay', 1), ('dongnanti', 1), ('lari', 1), ('aku', 1), ('rupiah', 1), ('topi', 1), ('acung', 1), ('jempol', 1), ('ikat', 1), ('minimal', 1), ('travelokaaaaaa', 1), ('itu', 1), ('capai', 1), ('tari', 1), ('gila', 1), ('iniudah', 1), ('bayarkarena', 1), ('jadiakhir', 1), ('cencel', 1), ('nyaterus', 1), ('kitaakhir', 1), ('masal', 1), ('castamer', 1), ('lgaplikasi', 1), ('preet', 1), ('ngalamin', 1), ('gessss', 1), ('mslh', 1), ('meni', 1), ('tunang', 1), ('wkt', 1), ('mmbayar', 1), ('nolaneh', 1), ('cehsaya', 1), ('teruspadahal', 1), ('berangkatklo', 1), ('bermanfaatsangat', 1), ('apaapaan', 1), ('slama', 1), ('selesaidan', 1), ('mencurigakanpadahal', 1), ('apainbintang', 1), ('inidan', 1), ('rentcar', 1), ('drivernya', 1), ('rentcarnya', 1), ('beritahu', 1), ('tata', 1), ('langkahlangkah', 1), ('pemberitahuannya', 1), ('pegang', 1), ('omong', 1), ('miss', 1), ('responnya', 1), ('recomend', 1), ('dar', 1), ('alias', 1), ('calo', 1), ('jaga', 1), ('akan', 1), ('internetnya', 1), ('traveler', 1), ('paki', 1), ('jogja', 1), ('muda', 1), ('estimasi', 1), ('maju', 1), ('pencet', 1), ('datangtidak', 1), ('kedok', 1), ('dicht', 1), ('jwb', 1), ('payleter', 1), ('blom', 1), ('duluan', 1), ('ketidaktersediaan', 1), ('unit', 1), ('ngapain', 1), ('administrasi', 1), ('ajar', 1), ('alfamart', 1), ('menuhin', 1), ('memori', 1), ('nyambung', 1), ('transit', 1), ('pertanggungjawaban', 1), ('beliin', 1), ('titip', 1), ('realita', 1), ('mereview', 1), ('insyaallah', 1), ('pakaidi', 1), ('sayaayo', 1), ('centre', 1), ('sudh', 1), ('kesalahn', 1), ('sepenuh', 1), ('dipakaimudah', 1), ('maubanyak', 1), ('layak', 1), ('klojkt', 1), ('fluktuatif', 1), ('otak', 1), ('lo', 1), ('mutasi', 1), ('apa', 1), ('janggal', 1), ('ilang', 1), ('kuliah', 1), ('benahin', 1), ('adahal', 1), ('ngambang', 1), ('derita', 1), ('nanti', 1), ('fi', 1), ('persen', 1), ('heran', 1), ('mash', 1), ('ngikut', 1), ('haduhh', 1), ('agen', 1), ('maskapailucunya', 1), ('nyabagaimana', 1), ('prosescs', 1), ('rekommend', 1), ('bangetbanyak', 1), ('tangga', 1), ('bisadisuruh', 1), ('kaum', 1), ('mager', 1), ('kmrn', 1), ('kebrngktn', 1), ('untk', 1), ('uninstal', 1), ('keberngktan', 1), ('ternyta', 1), ('plg', 1), ('kwatir', 1), ('lwat', 1), ('bimbing', 1), ('josss', 1), ('stabil', 1), ('perlu', 1), ('token', 1), ('ranking', 1), ('tiada', 1), ('sam', 1), ('seblah', 1), ('parahudah', 1), ('pp', 1), ('msih', 1), ('trhitung', 1), ('sbelum', 1), ('pmbrangkatn', 1), ('dikmbalikn', 1), ('nominal', 1), ('bntuk', 1), ('mnjebak', 1), ('mnahan', 1), ('sosok', 1), ('manusia', 1), ('bkn', 1), ('entar', 1), ('block', 1), ('situ', 1), ('edukasi', 1), ('mikie', 1), ('funland', 1), ('ulangin', 1), ('akar', 1), ('template', 1), ('ngerti', 1), ('teknologi', 1), ('ikutin', 1), ('tunjuk', 1), ('resultnya', 1), ('iitu', 1), ('malang', 1), ('boutique', 1), ('charge', 1), ('dada', 1), ('indikasi', 1), ('pembayaranartinya', 1), ('bronze', 1), ('malem', 1), ('baiktapi', 1), ('ngak', 1), ('sihkecuali', 1), ('track', 1), ('jwlek', 1), ('sorry', 1), ('dikontrolmasa', 1), ('kaget', 1), ('kah', 1), ('kl', 1), ('billing', 1), ('kudu', 1), ('bankudh', 1), ('appjdi', 1), ('displaynya', 1), ('input', 1), ('hargaga', 1), ('downloud', 1), ('ininbaru', 1), ('mbanking', 1), ('ktnya', 1), ('lagipihak', 1), ('cashpengalaman', 1), ('ditambahin', 1), ('mudahterkadang', 1), ('ewallet', 1), ('errorkalau', 1), ('rf', 1), ('rintis', 1), ('merdeka', 1), ('lorong', 1), ('iii', 1), ('renovasikalo', 1), ('tutupkenapa', 1), ('blacklist', 1), ('aplikasijangan', 1), ('korban', 1), ('dapetnya', 1), ('blnpadahal', 1), ('dibayarpemakaian', 1), ('limitpembayaran', 1), ('dobel', 1), ('bayarnyatapi', 1), ('gabis', 1), ('skrgpilihan', 1), ('adatp', 1), ('bgitu', 1), ('kreditgak', 1), ('bgtopsional', 1), ('f', 1), ('dioakelama', 1), ('area', 1), ('fc', 1), ('official', 1), ('bilangin', 1), ('developer', 1), ('buang', 1), ('sia', 1), ('sakit', 1), ('ruang', 1), ('tksh', 1), ('bilah', 1), ('lngsng', 1), ('cancalled', 1), ('sja', 1), ('itutolong', 1), ('aplgi', 1), ('membutuhkannyaterima', 1), ('psan', 1), ('kmaren', 1), ('off', 1), ('dinstall', 1), ('lgs', 1), ('skali', 1), ('hrg', 1), ('biasaa', 1), ('mreka', 1), ('pikir', 1), ('pakailg', 1), ('trevel', 1), ('provinsi', 1), ('apresiasi', 1), ('deal', 1), ('client', 1), ('garagara', 1), ('ko', 1), ('refundable', 1), ('its', 1), ('not', 1), ('eskalasi', 1), ('closed', 1), ('ttep', 1), ('nyesal', 1), ('kmudian', 1), ('brubah', 1), ('sndiri', 1), ('qt', 1), ('oh', 1), ('cantumka', 1), ('adaselalu', 1), ('repotptongan', 1), ('lamatapi', 1), ('akhirx', 1), ('cri', 1), ('mngkin', 1), ('agenxmaaf', 1), ('kesal', 1), ('connect', 1), ('woi', 1), ('terusss', 1), ('sama', 1), ('rata', 1), ('hedeweeeeee', 1), ('negri', 1), ('bokhing', 1), ('redeem', 1), ('merchant', 1), ('nonaktivkan', 1), ('jelaspadahal', 1), ('inisemenjak', 1), ('pttrinusa', 1), ('nyaapa', 1), ('kekanakkan', 1), ('spore', 1), ('timbul', 1), ('sadar', 1), ('pihak', 1), ('kes', 1), ('konyol', 1), ('ketgl', 1), ('seka', 1), ('kirimpas', 1), ('pusingbiasanya', 1), ('emailntah', 1), ('emailsy', 1), ('siniuntuk', 1), ('permudahkrn', 1), ('bulanbiar', 1), ('nyamaaf', 1), ('ksh', 1), ('saat', 1), ('malaysia', 1), ('melayu', 1), ('cacat', 1), ('smart', 1), ('ktika', 1), ('lov', 1), ('hargax', 1), ('leletkatanya', 1), ('adu', 1), ('lanjutkanaplikasi', 1), ('tenggat', 1), ('brmgkt', 1), ('berngkat', 1), ('nihil', 1), ('biasany', 1), ('mngkn', 1), ('trakhir', 1), ('maskapi', 1), ('komen', 1), ('negatif', 1), ('sebaikny', 1), ('consumen', 1), ('sederhana', 1), ('xmenit', 1), ('dngn', 1), ('ato', 1), ('ringlight', 1), ('pulak', 1), ('dipaylater', 1), ('travelling', 1), ('jogjabalisemarang', 1), ('hotelkeretaatau', 1), ('pesawatyang', 1), ('logout', 1), ('emilih', 1), ('letak', 1), ('saji', 1), ('peta', 1), ('trveler', 1), ('matur', 1), ('sembah', 1), ('nuwun', 1), ('pwkai', 1), ('banyaaakkk', 1), ('capeeeekkk', 1), ('hadeuh', 1), ('buset', 1), ('nagihnya', 1), ('nekan', 1), ('detik', 1), ('tdak', 1), ('putuskn', 1), ('pin', 1), ('identitas', 1), ('pesanemail', 1), ('ditolakpayleter', 1), ('ngira', 1), ('tanggungjawab', 1), ('pertanggungjawabannya', 1), ('ekspektasi', 1), ('ha', 1), ('ajuin', 1), ('uss', 1), ('issued', 1), ('trauma', 1), ('lancartetapi', 1), ('turunsedangkan', 1), ('kocak', 1), ('drop', 1), ('aktivitas', 1), ('anjlok', 1), ('tengah', 1), ('erti', 1), ('ay', 1), ('tara', 1), ('becus', 1), ('muter', 1), ('etikatelp', 1), ('kejar', 1), ('tekat', 1), ('nelp', 1), ('sempit', 1), ('mati', 1), ('penting', 1), ('klrga', 1), ('ku', 1), ('emosi', 1), ('nisdh', 1), ('bayarskrg', 1), ('pn', 1), ('keluarbagus', 1), ('dia', 1), ('shopie', 1), ('pny', 1), ('mau', 1), ('paylaterla', 1), ('menurungaaaaak', 1), ('jeeelaaaasss', 1), ('pswat', 1), ('prosesnyayg', 1), ('skalii', 1), ('pesawatautoo', 1), ('henti', 1), ('niii', 1), ('lalu', 1), ('paylatet', 1), ('awam', 1), ('udahlah', 1), ('bye', 1), ('refubd', 1), ('per', 1), ('tercancel', 1), ('agent', 1), ('satu', 1), ('resmi', 1), ('center', 1), ('lokasi', 1), ('capek', 1), ('bolak', 1), ('keluar', 1), ('kirain', 1), ('dpat', 1), ('hadehhh', 1), ('tema', 1), ('ngeri', 1), ('normal', 1), ('diskonhihi', 1), ('untg', 1), ('inihuninstall', 1), ('janormal', 1), ('ja', 1), ('hrsnya', 1), ('iming', 1), ('ma', 1), ('cicilansangat', 1), ('bangetpadahal', 1), ('ribetjdi', 1), ('love', 1), ('kurang', 1), ('ramadhan', 1), ('aduhhhh', 1), ('parahhh', 1), ('hai', 1), ('punya', 1), ('knpa', 1), ('itikad', 1), ('dispam', 1), ('reffund', 1), ('l', 1), ('pertamakali', 1), ('ditgl', 1), ('babay', 1), ('non', 1), ('cus', 1), ('unggah', 1), ('dehhh', 1), ('shopee', 1), ('ribetnya', 1), ('diulangulang', 1), ('dahulusop', 1), ('upload', 1), ('jahat', 1), ('rang', 1), ('nkok', 1), ('ngembaliin', 1), ('ikhlasin', 1), ('dkasih', 1), ('tinjau', 1), ('jadiin', 1), ('hubungin', 1), ('berteletele', 1), ('sanasini', 1), ('maksima', 1), ('mnit', 1), ('asa', 1), ('kacauuu', 1), ('mah', 1), ('riset', 1), ('mudahin', 1), ('nyusahin', 1), ('buru', 1), ('kini', 1), ('sgala', 1), ('mcam', 1), ('plisss', 1), ('melek', 1), ('bnyak', 1), ('updet', 1), ('munculin', 1), ('flight', 1), ('diupdate', 1), ('terupdate', 1), ('code', 1), ('etc', 1), ('keupdate', 1), ('professional', 1), ('kecewakami', 1), ('accoun', 1), ('fee', 1), ('langgar', 1), ('hak', 1), ('ibis', 1), ('kamarsaya', 1), ('tiga', 1), ('ulur', 1), ('kepastiannyacape', 1), ('dehterima', 1), ('umur', 1), ('jurus', 1), ('banyubiru', 1), ('gratis', 1), ('tawang', 1), ('balap', 1), ('boleh', 1), ('bwah', 1), ('loket', 1), ('mepet', 1), ('koordinasi', 1), ('kai', 1), ('ank', 1), ('kaku', 1), ('da', 1), ('ralat', 1), ('darat', 1), ('udara', 1), ('servicenya', 1), ('karangkates', 1), ('arjosari', 1), ('tv', 1), ('cable', 1), ('pdam', 1), ('listrik', 1), ('bpjs', 1), ('perbaikidi', 1), ('terlihattapi', 1), ('website', 1), ('terlihattolong', 1), ('perbaikikarena', 1), ('websiteterpaksa', 1), ('harap', 1), ('travelokaeehh', 1), ('kecewasaya', 1), ('penerbangn', 1), ('penerbagn', 1), ('jadipembatalan', 1), ('bording', 1), ('pass', 1), ('screnshoot', 1), ('dk', 1), ('naek', 1), ('idiotgw', 1), ('jkt', 1), ('dekat', 1), ('semarangblm', 1), ('izin', 1), ('terpercayaharga', 1), ('taxi', 1), ('hasanuddin', 1), ('villa', 1), ('com', 1), ('drama', 1), ('sayasaya', 1), ('gantiganti', 1), ('restart', 1), ('apus', 1), ('unduh', 1), ('tahap', 1), ('refundnya', 1), ('cashflow', 1), ('penginapanmakasih', 1), ('menginep', 1), ('alasaan', 1), ('enk', 1), ('silahkn', 1), ('mkn', 1), ('perbaikin', 1), ('surat', 1), ('ttd', 1), ('loh', 1), ('refaund', 1), ('schedule', 1), ('mintak', 1), ('ampunudah', 1), ('al', 1), ('hangusnyesel', 1), ('ready', 1), ('simpelsemoga', 1), ('ringkas', 1), ('tiketcouponvoucher', 1), ('lainlain', 1), ('tida', 1), ('layar', 1), ('kunci', 1), ('kapal', 1), ('laut', 1), ('ktp', 1), ('parahhhdan', 1), ('bagusnyesel', 1), ('bertahuntahun', 1), ('customernya', 1), ('ahhh', 1), ('ngajuin', 1), ('patah', 1), ('sigap', 1), ('ngebantu', 1), ('allhmdullilah', 1), ('armada', 1), ('travelokaterbaik', 1), ('barusan', 1), ('profil', 1), ('nampilinnya', 1), ('bru', 1), ('ajh', 1), ('ngisi', 1), ('dinaikin', 1), ('jdinya', 1), ('kesel', 1), ('trinusa', 1), ('asli', 1), ('hub', 1), ('dislesaikan', 1), ('terbaikk', 1), ('mantapp', 1), ('rincian', 1), ('dl', 1), ('fix', 1), ('sll', 1), ('acara', 1), ('doank', 1), ('moduus', 1), ('air', 1), ('seringkali', 1), ('pojok', 1), ('hadap', 1), ('tembok', 1), ('tempat', 1), ('trasnportasi', 1), ('biss', 1), ('kantorterima', 1), ('ampun', 1), ('penelfonnya', 1), ('kn', 1), ('telp', 1), ('recommen', 1), ('alay', 1), ('petinggi', 1), ('gblok', 1), ('psawat', 1), ('ud', 1), ('sar', 1), ('collector', 1), ('ngatain', 1), ('maling', 1), ('ngajak', 1), ('ribut', 1), ('blok', 1), ('travelloka', 1), ('ovo', 1), ('sanggup', 1), ('blg', 1), ('kepotony', 1), ('ktransaksi', 1), ('manapadahal', 1), ('brp', 1), ('nua', 1), ('tautp', 1), ('gituimisalnya', 1), ('tmbh', 1), ('hargatp', 1), ('ditravelokanya', 1), ('gede', 1), ('bgtjauh', 1), ('web', 1), ('mimi', 1), ('bugnya', 1), ('beneran', 1), ('kecewapada', 1), ('travelbus', 1), ('himbau', 1), ('jmpt', 1), ('gtu', 1), ('lansung', 1), ('otw', 1), ('po', 1), ('mlmnunggu', 1), ('smpai', 1), ('elf', 1), ('ac', 1), ('dinginkursi', 1), ('dempet', 1), ('tjuan', 1), ('kterangn', 1), ('aplksi', 1), ('trvlk', 1), ('mahalrescedule', 1), ('fita', 1), ('lamban', 1), ('ota', 1), ('kakak', 1), ('giur', 1), ('appsnya', 1), ('berpergianpulang', 1), ('kecewajelas', 1), ('kecewaharga', 1), ('maksud', 1), ('sllu', 1), ('trs', 1), ('eticket', 1), ('terbitknyamohon', 1), ('kmbli', 1), ('sungguh', 1), ('buat', 1), ('dzalim', 1), ('bencana', 1), ('gunung', 1), ('letus', 1), ('kilas', 1), ('ecek', 1), ('tunggak', 1), ('analis', 1), ('kriteria', 1), ('spt', 1), ('mesen', 1), ('iklanya', 1), ('smpe', 1), ('bola', 1), ('pingpong', 1), ('service', 1), ('nerima', 1), ('prmbayaran', 1), ('vouchet', 1), ('pesawathotelbusdll', 1), ('bangetklau', 1), ('lgsung', 1), ('ig', 1), ('ditanggapinsuka', 1), ('lgi', 1), ('stres', 1), ('bukany', 1), ('pajak', 1), ('maksimal', 1), ('diperolehtolong', 1), ('klw', 1), ('coding', 1), ('tombol', 1), ('back', 1), ('fast', 1), ('response', 1), ('kaga', 1), ('tbtb', 1), ('whatsapp', 1), ('bodoh', 1), ('ajg', 1), ('aplikasibuat', 1), ('hitel', 1), ('rescheduleok', 1), ('jgdah', 1), ('ngejar', 1), ('cantum', 1), ('etiketntah', 1), ('or', 1), ('very', 1), ('communication', 1), ('mark', 1), ('matiin', 1), ('smartlock', 1), ('travelokamempermudah', 1), ('hotelliburan', 1), ('seru', 1), ('efisien', 1), ('tenyata', 1), ('apart', 1), ('apss', 1), ('gold', 1), ('lucu', 1), ('lainudah', 1), ('mnding', 1), ('gx', 1), ('is', 1), ('terbaikmudah', 1), ('rumit', 1), ('simplemaju', 1), ('travelokasalam', 1), ('design', 1), ('jadwat', 1), ('habisin', 1), ('teman', 1), ('sekalilebih', 1), ('terustapi', 1), ('bagusakun', 1), ('vocher', 1), ('waktutiba', 1), ('sedikitpembayaran', 1), ('bagustidak', 1), ('nyalimit', 1), ('simpah', 1), ('pesa', 1), ('teliti', 1), ('kalender', 1), ('tanbah', 1), ('rbu', 1), ('transfereee', 1), ('sdri', 1), ('tugas', 1), ('habisakhirpihah', 1), ('balikakhir', 1), ('benar', 1), ('ojk', 1), ('sebar', 1), ('tuntut', 1), ('utuh', 1), ('adil', 1), ('ngeringeri', 1), ('miskomunikasi', 1), ('luccu', 1), ('noner', 1), ('debit', 1), ('belangkange', 1), ('bantuanya', 1), ('bos', 1), ('discountnya', 1), ('bagi', 1), ('mggu', 1), ('mei', 1), ('djmpt', 1), ('sibuk', 1), ('smw', 1), ('trpksa', 1), ('antar', 1), ('bandarasy', 1), ('hbgi', 1), ('mnt', 1), ('rek', 1), ('kmblisgt', 1), ('eks', 1), ('salam', 1), ('pesawatsangat', 1), ('invalid', 1), ('mentok', 1), ('dikonfirm', 1), ('dibalikin', 1), ('uangnyatapi', 1), ('jugajadi', 1), ('ramai', 1), ('initp', 1), ('trutama', 1), ('payletter', 1), ('turunlimit', 1), ('tdi', 1), ('skr', 1), ('gmna', 1), ('lh', 1), ('belibetin', 1), ('dmna', 1), ('tahan', 1), ('iniselain', 1), ('bebas', 1), ('loyal', 1), ('offline', 1), ('waw', 1), ('aesthetic', 1), ('wifi', 1), ('on', 1), ('paykater', 1), ('system', 1), ('buruburu', 1), ('minim', 1), ('etika', 1), ('assalamualaikum', 1), ('arif', 1), ('santoso', 1), ('efektif', 1), ('efesien', 1), ('minat', 1), ('rakyat', 1), ('amin', 1), ('robbal', 1), ('alamin', 1), ('usahh', 1), ('mutu', 1), ('canggih', 1), ('audit', 1), ('internal', 1), ('berharihari', 1), ('taik', 1), ('travoloka', 1), ('platinum', 1), ('aplikator', 1), ('pungut', 1), ('timbang', 1), ('berkalikali', 1), ('ajarsaya', 1), ('hotelsaya', 1), ('lambatalasan', 1), ('reschdulepadahal', 1), ('resepsionis', 1), ('perihal', 1), ('reschdule', 1), ('kepastianini', 1), ('jawab', 1), ('bgett', 1), ('lbih', 1), ('lampungjakarta', 1), ('hjam', 1), ('ngurus', 1), ('maks', 1), ('lamaaaa', 1), ('kelas', 1)]\n"
          ]
        }
      ],
      "source": [
        "all_tokens =[token for sublist in df['stemming']for token in sublist]\n",
        "freq_dist = FreqDist(all_tokens)\n",
        "print(freq_dist.most_common())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 503
        },
        "id": "EOVaDxWWbPQX",
        "outputId": "e55a8a44-afd4-43a2-af6c-b1aa6af223c4"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "freq_dist.plot(30,cumulative=False)\n",
        "plt.show()"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNv/5tOdue/AiS08avp0qql",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}